THREE.OBJLoader=function(){var e=/^[og]\s*(.+)?/;var t=/^mtllib /;var r=/^usemtl /;function i(){var e={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materialLibraries:[],startObject:function(e,t){if(this.object&&this.object.fromDeclaration===false){this.object.name=e;this.object.fromDeclaration=t!==false;return}var r=this.object&&typeof this.object.currentMaterial==="function"?this.object.currentMaterial():undefined;if(this.object&&typeof this.object._finalize==="function"){this.object._finalize(true)}this.object={name:e||"",fromDeclaration:t!==false,geometry:{vertices:[],normals:[],colors:[],uvs:[]},materials:[],smooth:true,startMaterial:function(e,t){var r=this._finalize(false);if(r&&(r.inherited||r.groupCount<=0)){this.materials.splice(r.index,1)}var i={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:r!==undefined?r.smooth:this.smooth,groupStart:r!==undefined?r.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:false,clone:function(e){var t={index:typeof e==="number"?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:false};t.clone=this.clone.bind(t);return t}};this.materials.push(i);return i},currentMaterial:function(){if(this.materials.length>0){return this.materials[this.materials.length-1]}return undefined},_finalize:function(e){var t=this.currentMaterial();if(t&&t.groupEnd===-1){t.groupEnd=this.geometry.vertices.length/3;t.groupCount=t.groupEnd-t.groupStart;t.inherited=false}if(e&&this.materials.length>1){for(var r=this.materials.length-1;r>=0;r--){if(this.materials[r].groupCount<=0){this.materials.splice(r,1)}}}if(e&&this.materials.length===0){this.materials.push({name:"",smooth:this.smooth})}return t}};if(r&&r.name&&typeof r.clone==="function"){var i=r.clone(0);i.inherited=true;this.object.materials.push(i)}this.objects.push(this.object)},finalize:function(){if(this.object&&typeof this.object._finalize==="function"){this.object._finalize(true)}},parseVertexIndex:function(e,t){var r=parseInt(e,10);return(r>=0?r-1:r+t/3)*3},parseNormalIndex:function(e,t){var r=parseInt(e,10);return(r>=0?r-1:r+t/3)*3},parseUVIndex:function(e,t){var r=parseInt(e,10);return(r>=0?r-1:r+t/2)*2},addVertex:function(e,t,r){var i=this.vertices;var a=this.object.geometry.vertices;a.push(i[e+0],i[e+1],i[e+2]);a.push(i[t+0],i[t+1],i[t+2]);a.push(i[r+0],i[r+1],i[r+2])},addVertexPoint:function(e){var t=this.vertices;var r=this.object.geometry.vertices;r.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){var t=this.vertices;var r=this.object.geometry.vertices;r.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,r){var i=this.normals;var a=this.object.geometry.normals;a.push(i[e+0],i[e+1],i[e+2]);a.push(i[t+0],i[t+1],i[t+2]);a.push(i[r+0],i[r+1],i[r+2])},addColor:function(e,t,r){var i=this.colors;var a=this.object.geometry.colors;a.push(i[e+0],i[e+1],i[e+2]);a.push(i[t+0],i[t+1],i[t+2]);a.push(i[r+0],i[r+1],i[r+2])},addUV:function(e,t,r){var i=this.uvs;var a=this.object.geometry.uvs;a.push(i[e+0],i[e+1]);a.push(i[t+0],i[t+1]);a.push(i[r+0],i[r+1])},addUVLine:function(e){var t=this.uvs;var r=this.object.geometry.uvs;r.push(t[e+0],t[e+1])},addFace:function(e,t,r,i,a,s,n,o,l){var h=this.vertices.length;var u=this.parseVertexIndex(e,h);var f=this.parseVertexIndex(t,h);var c=this.parseVertexIndex(r,h);this.addVertex(u,f,c);if(i!==undefined&&i!==""){var v=this.uvs.length;u=this.parseUVIndex(i,v);f=this.parseUVIndex(a,v);c=this.parseUVIndex(s,v);this.addUV(u,f,c)}if(n!==undefined&&n!==""){var p=this.normals.length;u=this.parseNormalIndex(n,p);f=n===o?u:this.parseNormalIndex(o,p);c=n===l?u:this.parseNormalIndex(l,p);this.addNormal(u,f,c)}if(this.colors.length>0){this.addColor(u,f,c)}},addPointGeometry:function(e){this.object.geometry.type="Points";var t=this.vertices.length;for(var r=0,i=e.length;r<i;r++){this.addVertexPoint(this.parseVertexIndex(e[r],t))}},addLineGeometry:function(e,t){this.object.geometry.type="Line";var r=this.vertices.length;var i=this.uvs.length;for(var a=0,s=e.length;a<s;a++){this.addVertexLine(this.parseVertexIndex(e[a],r))}for(var n=0,s=t.length;n<s;n++){this.addUVLine(this.parseUVIndex(t[n],i))}}};e.startObject("",false);return e}function a(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager;this.materials=null}a.prototype={constructor:a,load:function(e,t,r,i){var a=this;var s=new THREE.FileLoader(a.manager);s.setPath(this.path);s.load(e,function(e){t(a.parse(e))},r,i)},setPath:function(e){this.path=e;return this},setMaterials:function(e){this.materials=e;return this},parse:function(a){console.time("OBJLoader");var s=new i;if(a.indexOf("\r\n")!==-1){a=a.replace(/\r\n/g,"\n")}if(a.indexOf("\\\n")!==-1){a=a.replace(/\\\n/g,"")}var n=a.split("\n");var o="",l="";var h=0;var u=[];var f=typeof"".trimLeft==="function";for(var c=0,v=n.length;c<v;c++){o=n[c];o=f?o.trimLeft():o.trim();h=o.length;if(h===0)continue;l=o.charAt(0);if(l==="#")continue;if(l==="v"){var p=o.split(/\s+/);switch(p[0]){case"v":s.vertices.push(parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[3]));if(p.length===8){s.colors.push(parseFloat(p[4]),parseFloat(p[5]),parseFloat(p[6]))}break;case"vn":s.normals.push(parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[3]));break;case"vt":s.uvs.push(parseFloat(p[1]),parseFloat(p[2]));break}}else if(l==="f"){var d=o.substr(1).trim();var m=d.split(/\s+/);var g=[];for(var b=0,E=m.length;b<E;b++){var x=m[b];if(x.length>0){var j=x.split("/");g.push(j)}}var y=g[0];for(var b=1,E=g.length-1;b<E;b++){var H=g[b];var L=g[b+1];s.addFace(y[0],H[0],L[0],y[1],H[1],L[1],y[2],H[2],L[2])}}else if(l==="l"){var R=o.substring(1).trim().split(" ");var T=[],w=[];if(o.indexOf("/")===-1){T=R}else{for(var V=0,M=R.length;V<M;V++){var F=R[V].split("/");if(F[0]!=="")T.push(F[0]);if(F[1]!=="")w.push(F[1])}}s.addLineGeometry(T,w)}else if(l==="p"){var d=o.substr(1).trim();var I=d.split(" ");s.addPointGeometry(I)}else if((u=e.exec(o))!==null){var P=(" "+u[0].substr(1).trim()).substr(1);s.startObject(P)}else if(r.test(o)){s.object.startMaterial(o.substring(7).trim(),s.materialLibraries)}else if(t.test(o)){s.materialLibraries.push(o.substring(7).trim())}else if(l==="s"){u=o.split(" ");if(u.length>1){var A=u[1].trim().toLowerCase();s.object.smooth=A!=="0"&&A!=="off"}else{s.object.smooth=true}var z=s.object.currentMaterial();if(z)z.smooth=s.object.smooth}else{if(o==="\0")continue;throw new Error('THREE.OBJLoader: Unexpected line: "'+o+'"')}}s.finalize();var B=new THREE.Group;B.materialLibraries=[].concat(s.materialLibraries);for(var c=0,v=s.objects.length;c<v;c++){var C=s.objects[c];var O=C.geometry;var U=C.materials;var N=O.type==="Line";var G=O.type==="Points";var S=false;if(O.vertices.length===0)continue;var _=new THREE.BufferGeometry;_.addAttribute("position",new THREE.Float32BufferAttribute(O.vertices,3));if(O.normals.length>0){_.addAttribute("normal",new THREE.Float32BufferAttribute(O.normals,3))}else{_.computeVertexNormals()}if(O.colors.length>0){S=true;_.addAttribute("color",new THREE.Float32BufferAttribute(O.colors,3))}if(O.uvs.length>0){_.addAttribute("uv",new THREE.Float32BufferAttribute(O.uvs,2))}var D=[];for(var J=0,k=U.length;J<k;J++){var q=U[J];var z=undefined;if(this.materials!==null){z=this.materials.create(q.name);if(N&&z&&!(z instanceof THREE.LineBasicMaterial)){var K=new THREE.LineBasicMaterial;THREE.Material.prototype.copy.call(K,z);K.color.copy(z.color);K.lights=false;z=K}else if(G&&z&&!(z instanceof THREE.PointsMaterial)){var Q=new THREE.PointsMaterial({size:10,sizeAttenuation:false});THREE.Material.prototype.copy.call(Q,z);Q.color.copy(z.color);Q.map=z.map;Q.lights=false;z=Q}}if(!z){if(N){z=new THREE.LineBasicMaterial}else if(G){z=new THREE.PointsMaterial({size:1,sizeAttenuation:false})}else{z=new THREE.MeshPhongMaterial}z.name=q.name}z.flatShading=q.smooth?false:true;z.vertexColors=S?THREE.VertexColors:THREE.NoColors;D.push(z)}var W;if(D.length>1){for(var J=0,k=U.length;J<k;J++){var q=U[J];_.addGroup(q.groupStart,q.groupCount,J)}if(N){W=new THREE.LineSegments(_,D)}else if(G){W=new THREE.Points(_,D)}else{W=new THREE.Mesh(_,D)}}else{if(N){W=new THREE.LineSegments(_,D[0])}else if(G){W=new THREE.Points(_,D[0])}else{W=new THREE.Mesh(_,D[0])}}W.name=C.name;B.add(W)}console.timeEnd("OBJLoader");return B}};return a}();
//# sourceMappingURL=OBJLoader.min.js.map