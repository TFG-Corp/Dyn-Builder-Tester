"use strict";if(THREE.OBJLoader2===undefined){THREE.OBJLoader2={}}if(THREE.LoaderSupport===undefined)console.error('"THREE.LoaderSupport" is not available. "THREE.OBJLoader2" requires it. Please include "LoaderSupport.js" in your HTML.');THREE.OBJLoader2=function(e){console.info("Using THREE.OBJLoader2 version: "+THREE.OBJLoader2.OBJLOADER2_VERSION);this.manager=THREE.LoaderSupport.Validator.verifyInput(e,THREE.DefaultLoadingManager);this.logging={enabled:true,debug:false};this.modelName="";this.instanceNo=0;this.path;this.resourcePath;this.useIndices=false;this.disregardNormals=false;this.materialPerSmoothingGroup=false;this.useOAsMesh=false;this.loaderRootNode=new THREE.Group;this.meshBuilder=new THREE.LoaderSupport.MeshBuilder;this.callbacks=new THREE.LoaderSupport.Callbacks;this.workerSupport=new THREE.LoaderSupport.WorkerSupport;this.terminateWorkerOnLoad=true};THREE.OBJLoader2.OBJLOADER2_VERSION="2.5.0";THREE.OBJLoader2.prototype={constructor:THREE.OBJLoader2,setLogging:function(e,t){this.logging.enabled=e===true;this.logging.debug=t===true;this.meshBuilder.setLogging(this.logging.enabled,this.logging.debug)},setModelName:function(e){this.modelName=THREE.LoaderSupport.Validator.verifyInput(e,this.modelName)},setPath:function(e){this.path=THREE.LoaderSupport.Validator.verifyInput(e,this.path)},setResourcePath:function(e){this.resourcePath=THREE.LoaderSupport.Validator.verifyInput(e,this.resourcePath)},setStreamMeshesTo:function(e){this.loaderRootNode=THREE.LoaderSupport.Validator.verifyInput(e,this.loaderRootNode)},setMaterials:function(e){this.meshBuilder.setMaterials(e)},setUseIndices:function(e){this.useIndices=e===true},setDisregardNormals:function(e){this.disregardNormals=e===true},setMaterialPerSmoothingGroup:function(e){this.materialPerSmoothingGroup=e===true},setUseOAsMesh:function(e){this.useOAsMesh=e===true},_setCallbacks:function(e){if(THREE.LoaderSupport.Validator.isValid(e.onProgress))this.callbacks.setCallbackOnProgress(e.onProgress);if(THREE.LoaderSupport.Validator.isValid(e.onReportError))this.callbacks.setCallbackOnReportError(e.onReportError);if(THREE.LoaderSupport.Validator.isValid(e.onMeshAlter))this.callbacks.setCallbackOnMeshAlter(e.onMeshAlter);if(THREE.LoaderSupport.Validator.isValid(e.onLoad))this.callbacks.setCallbackOnLoad(e.onLoad);if(THREE.LoaderSupport.Validator.isValid(e.onLoadMaterials))this.callbacks.setCallbackOnLoadMaterials(e.onLoadMaterials);this.meshBuilder._setCallbacks(this.callbacks)},onProgress:function(e,t,s){var r=THREE.LoaderSupport.Validator.isValid(t)?t:"";var a={detail:{type:e,modelName:this.modelName,instanceNo:this.instanceNo,text:r,numericalValue:s}};if(THREE.LoaderSupport.Validator.isValid(this.callbacks.onProgress))this.callbacks.onProgress(a);if(this.logging.enabled&&this.logging.debug)console.debug(r)},_onError:function(e){var t="Error occurred while downloading!";if(e.currentTarget&&e.currentTarget.statusText!==null){t+="\nurl: "+e.currentTarget.responseURL+"\nstatus: "+e.currentTarget.statusText}this.onProgress("error",t,-1);this._throwError(t)},_throwError:function(e){if(THREE.LoaderSupport.Validator.isValid(this.callbacks.onReportError)){this.callbacks.onReportError(e)}else{throw e}},load:function(e,t,s,r,a,o){var i=new THREE.LoaderSupport.ResourceDescriptor(e,"OBJ");this._loadObj(i,t,s,r,a,o)},_loadObj:function(e,t,s,r,a,o){var i=this;if(!THREE.LoaderSupport.Validator.isValid(r)){r=function(e){i._onError(e)}}if(!THREE.LoaderSupport.Validator.isValid(e))r("An invalid ResourceDescriptor was provided. Unable to continue!");var n=function(s){e.content=s;if(o){i.parseAsync(s,t)}else{var r=new THREE.LoaderSupport.Callbacks;r.setCallbackOnMeshAlter(a);i._setCallbacks(r);t({detail:{loaderRootNode:i.parse(s),modelName:i.modelName,instanceNo:i.instanceNo}})}};this.setPath(e.path);this.setResourcePath(e.resourcePath);if(!THREE.LoaderSupport.Validator.isValid(e.url)||THREE.LoaderSupport.Validator.isValid(e.content)){n(THREE.LoaderSupport.Validator.isValid(e.content)?e.content:null)}else{if(!THREE.LoaderSupport.Validator.isValid(s)){var l=0;var u=0;s=function(t){if(!t.lengthComputable)return;u=t.loaded/t.total;if(u>l){l=u;var s='Download of "'+e.url+'": '+(u*100).toFixed(2)+"%";i.onProgress("progressLoad",s,u)}}}var h=new THREE.FileLoader(this.manager);h.setPath(this.path||this.resourcePath);h.setResponseType("arraybuffer");h.load(e.name,n,s,r)}},run:function(e,t){this._applyPrepData(e);var s=e.checkResourceDescriptorFiles(e.resources,[{ext:"obj",type:"ArrayBuffer",ignore:false},{ext:"mtl",type:"String",ignore:false},{ext:"zip",type:"String",ignore:true}]);if(THREE.LoaderSupport.Validator.isValid(t)){this.terminateWorkerOnLoad=false;this.workerSupport=t;this.logging.enabled=this.workerSupport.logging.enabled;this.logging.debug=this.workerSupport.logging.debug}var r=this;var a=function(t){if(t!==null)r.meshBuilder.setMaterials(t);r._loadObj(s.obj,r.callbacks.onLoad,null,null,r.callbacks.onMeshAlter,e.useAsync)};this._loadMtl(s.mtl,a,null,null,e.crossOrigin,e.materialOptions)},_applyPrepData:function(e){if(THREE.LoaderSupport.Validator.isValid(e)){this.setLogging(e.logging.enabled,e.logging.debug);this.setModelName(e.modelName);this.setStreamMeshesTo(e.streamMeshesTo);this.meshBuilder.setMaterials(e.materials);this.setUseIndices(e.useIndices);this.setDisregardNormals(e.disregardNormals);this.setMaterialPerSmoothingGroup(e.materialPerSmoothingGroup);this.setUseOAsMesh(e.useOAsMesh);this._setCallbacks(e.getCallbacks())}},parse:function(e){if(!THREE.LoaderSupport.Validator.isValid(e)){console.warn("Provided content is not a valid ArrayBuffer or String.");return this.loaderRootNode}if(this.logging.enabled)console.time("OBJLoader2 parse: "+this.modelName);this.meshBuilder.init();var t=new THREE.OBJLoader2.Parser;t.setLogging(this.logging.enabled,this.logging.debug);t.setMaterialPerSmoothingGroup(this.materialPerSmoothingGroup);t.setUseOAsMesh(this.useOAsMesh);t.setUseIndices(this.useIndices);t.setDisregardNormals(this.disregardNormals);t.setMaterials(this.meshBuilder.getMaterials());var s=this;var r=function(e){var t=s.meshBuilder.processPayload(e);var r;for(var a in t){r=t[a];s.loaderRootNode.add(r)}};t.setCallbackMeshBuilder(r);var a=function(e,t){s.onProgress("progressParse",e,t)};t.setCallbackProgress(a);if(e instanceof ArrayBuffer||e instanceof Uint8Array){if(this.logging.enabled)console.info("Parsing arrayBuffer...");t.parse(e)}else if(typeof e==="string"||e instanceof String){if(this.logging.enabled)console.info("Parsing text...");t.parseText(e)}else{this._throwError("Provided content was neither of type String nor Uint8Array! Aborting...")}if(this.logging.enabled)console.timeEnd("OBJLoader2 parse: "+this.modelName);return this.loaderRootNode},parseAsync:function(e,t){var s=this;var r=false;var a=function(){t({detail:{loaderRootNode:s.loaderRootNode,modelName:s.modelName,instanceNo:s.instanceNo}});if(r&&s.logging.enabled)console.timeEnd("OBJLoader2 parseAsync: "+s.modelName)};if(!THREE.LoaderSupport.Validator.isValid(e)){console.warn("Provided content is not a valid ArrayBuffer.");a()}else{r=true}if(r&&this.logging.enabled)console.time("OBJLoader2 parseAsync: "+this.modelName);this.meshBuilder.init();var o=function(e){var t=s.meshBuilder.processPayload(e);var r;for(var a in t){r=t[a];s.loaderRootNode.add(r)}};var i=function(e){var t="";t+="/**\n";t+="  * This code was constructed by OBJLoader2 buildCode.\n";t+="  */\n\n";t+="THREE = { LoaderSupport: {}, OBJLoader2: {} };\n\n";t+=e.serializeObject("THREE.LoaderSupport.Validator",THREE.LoaderSupport.Validator);t+=e.serializeClass("THREE.OBJLoader2.Parser",THREE.OBJLoader2.Parser);return t};this.workerSupport.validate(i,"THREE.OBJLoader2.Parser");this.workerSupport.setCallbacks(o,a);if(s.terminateWorkerOnLoad)this.workerSupport.setTerminateRequested(true);var n={};var l=this.meshBuilder.getMaterials();for(var u in l){n[u]=u}this.workerSupport.run({params:{useAsync:true,materialPerSmoothingGroup:this.materialPerSmoothingGroup,useOAsMesh:this.useOAsMesh,useIndices:this.useIndices,disregardNormals:this.disregardNormals},logging:{enabled:this.logging.enabled,debug:this.logging.debug},materials:{materials:n},data:{input:e,options:null}})},loadMtl:function(e,t,s,r,a,o,i){var n=new THREE.LoaderSupport.ResourceDescriptor(e,"MTL");n.setContent(t);this._loadMtl(n,s,r,a,o,i)},_loadMtl:function(e,t,s,r,a,o){if(THREE.MTLLoader===undefined)console.error('"THREE.MTLLoader" is not available. "THREE.OBJLoader2" requires it for loading MTL files.');if(THREE.LoaderSupport.Validator.isValid(e)&&this.logging.enabled)console.time("Loading MTL: "+e.name);var i=[];var n=this;var l=function(s){var r=[];if(THREE.LoaderSupport.Validator.isValid(s)){s.preload();r=s.materials;for(var a in r){if(r.hasOwnProperty(a)){i[a]=r[a]}}}if(THREE.LoaderSupport.Validator.isValid(e)&&n.logging.enabled)console.timeEnd("Loading MTL: "+e.name);t(i,s)};if(!THREE.LoaderSupport.Validator.isValid(e)||!THREE.LoaderSupport.Validator.isValid(e.content)&&!THREE.LoaderSupport.Validator.isValid(e.url)){l()}else{var u=new THREE.MTLLoader(this.manager);a=THREE.LoaderSupport.Validator.verifyInput(a,"anonymous");u.setCrossOrigin(a);u.setResourcePath(e.resourcePath||e.path);if(THREE.LoaderSupport.Validator.isValid(o))u.setMaterialOptions(o);var h=function(e){var t=e;if(typeof e!=="string"&&!(e instanceof String)){if(e.length>0||e.byteLength>0){t=THREE.LoaderUtils.decodeText(e)}else{this._throwError("Unable to parse mtl as it it seems to be neither a String, an Array or an ArrayBuffer!")}}l(u.parse(t))};if(THREE.LoaderSupport.Validator.isValid(e.content)){h(e.content)}else if(THREE.LoaderSupport.Validator.isValid(e.url)){var d=new THREE.FileLoader(this.manager);if(!THREE.LoaderSupport.Validator.isValid(r)){r=function(e){n._onError(e)}}if(!THREE.LoaderSupport.Validator.isValid(s)){var c=0;var p=0;s=function(t){if(!t.lengthComputable)return;p=t.loaded/t.total;if(p>c){c=p;var s='Download of "'+e.url+'": '+(p*100).toFixed(2)+"%";n.onProgress("progressLoad",s,p)}}}d.load(e.url,h,s,r)}}}};THREE.OBJLoader2.Parser=function(){this.callbackProgress=null;this.callbackMeshBuilder=null;this.contentRef=null;this.legacyMode=false;this.materials={};this.useAsync=false;this.materialPerSmoothingGroup=false;this.useOAsMesh=false;this.useIndices=false;this.disregardNormals=false;this.vertices=[];this.colors=[];this.normals=[];this.uvs=[];this.rawMesh={objectName:"",groupName:"",activeMtlName:"",mtllibName:"",faceType:-1,subGroups:[],subGroupInUse:null,smoothingGroup:{splitMaterials:false,normalized:-1,real:-1},counts:{doubleIndicesCount:0,faceCount:0,mtlCount:0,smoothingGroupCount:0}};this.inputObjectCount=1;this.outputObjectCount=1;this.globalCounts={vertices:0,faces:0,doubleIndicesCount:0,lineByte:0,currentByte:0,totalBytes:0};this.logging={enabled:true,debug:false}};THREE.OBJLoader2.Parser.prototype={constructor:THREE.OBJLoader2.Parser,resetRawMesh:function(){this.rawMesh.subGroups=[];this.rawMesh.subGroupInUse=null;this.rawMesh.smoothingGroup.normalized=-1;this.rawMesh.smoothingGroup.real=-1;this.pushSmoothingGroup(1);this.rawMesh.counts.doubleIndicesCount=0;this.rawMesh.counts.faceCount=0;this.rawMesh.counts.mtlCount=0;this.rawMesh.counts.smoothingGroupCount=0},setUseAsync:function(e){this.useAsync=e},setMaterialPerSmoothingGroup:function(e){this.materialPerSmoothingGroup=e},setUseOAsMesh:function(e){this.useOAsMesh=e},setUseIndices:function(e){this.useIndices=e},setDisregardNormals:function(e){this.disregardNormals=e},setMaterials:function(e){this.materials=THREE.LoaderSupport.Validator.verifyInput(e,this.materials);this.materials=THREE.LoaderSupport.Validator.verifyInput(this.materials,{})},setCallbackMeshBuilder:function(e){if(!THREE.LoaderSupport.Validator.isValid(e)){this._throwError('Unable to run as no "MeshBuilder" callback is set.')}this.callbackMeshBuilder=e},setCallbackProgress:function(e){this.callbackProgress=e},setLogging:function(e,t){this.logging.enabled=e===true;this.logging.debug=t===true},configure:function(){this.pushSmoothingGroup(1);if(this.logging.enabled){var e=Object.keys(this.materials);var t=e.length>0?"\n\tmaterialNames:\n\t\t- "+e.join("\n\t\t- "):"\n\tmaterialNames: None";var s="OBJLoader2.Parser configuration:"+t+"\n\tuseAsync: "+this.useAsync+"\n\tmaterialPerSmoothingGroup: "+this.materialPerSmoothingGroup+"\n\tuseOAsMesh: "+this.useOAsMesh+"\n\tuseIndices: "+this.useIndices+"\n\tdisregardNormals: "+this.disregardNormals+"\n\tcallbackMeshBuilderName: "+this.callbackMeshBuilder.name+"\n\tcallbackProgressName: "+this.callbackProgress.name;console.info(s)}},parse:function(e){if(this.logging.enabled)console.time("OBJLoader2.Parser.parse");this.configure();var t=new Uint8Array(e);this.contentRef=t;var s=t.byteLength;this.globalCounts.totalBytes=s;var r=new Array(128);for(var a,o="",i=0,n=0,l=0;l<s;l++){a=t[l];switch(a){case 32:if(o.length>0)r[i++]=o;o="";break;case 47:if(o.length>0)r[i++]=o;n++;o="";break;case 10:if(o.length>0)r[i++]=o;o="";this.globalCounts.lineByte=this.globalCounts.currentByte;this.globalCounts.currentByte=l;this.processLine(r,i,n);i=0;n=0;break;case 13:break;default:o+=String.fromCharCode(a);break}}this.finalizeParsing();if(this.logging.enabled)console.timeEnd("OBJLoader2.Parser.parse")},parseText:function(e){if(this.logging.enabled)console.time("OBJLoader2.Parser.parseText");this.configure();this.legacyMode=true;this.contentRef=e;var t=e.length;this.globalCounts.totalBytes=t;var s=new Array(128);for(var r,a="",o=0,i=0,n=0;n<t;n++){r=e[n];switch(r){case" ":if(a.length>0)s[o++]=a;a="";break;case"/":if(a.length>0)s[o++]=a;i++;a="";break;case"\n":if(a.length>0)s[o++]=a;a="";this.globalCounts.lineByte=this.globalCounts.currentByte;this.globalCounts.currentByte=n;this.processLine(s,o,i);o=0;i=0;break;case"\r":break;default:a+=r}}this.finalizeParsing();if(this.logging.enabled)console.timeEnd("OBJLoader2.Parser.parseText")},processLine:function(e,t,s){if(t<1)return;var r=function(e,t,s,r){var a="";if(r>s){var o;if(t){for(o=s;o<r;o++)a+=e[o]}else{for(o=s;o<r;o++)a+=String.fromCharCode(e[o])}a=a.trim()}return a};var a,o,i,n;n=e[0];switch(n){case"v":this.vertices.push(parseFloat(e[1]));this.vertices.push(parseFloat(e[2]));this.vertices.push(parseFloat(e[3]));if(t>4){this.colors.push(parseFloat(e[4]));this.colors.push(parseFloat(e[5]));this.colors.push(parseFloat(e[6]))}break;case"vt":this.uvs.push(parseFloat(e[1]));this.uvs.push(parseFloat(e[2]));break;case"vn":this.normals.push(parseFloat(e[1]));this.normals.push(parseFloat(e[2]));this.normals.push(parseFloat(e[3]));break;case"f":a=t-1;if(s===0){this.checkFaceType(0);for(i=2,o=a;i<o;i++){this.buildFace(e[1]);this.buildFace(e[i]);this.buildFace(e[i+1])}}else if(a===s*2){this.checkFaceType(1);for(i=3,o=a-2;i<o;i+=2){this.buildFace(e[1],e[2]);this.buildFace(e[i],e[i+1]);this.buildFace(e[i+2],e[i+3])}}else if(a*2===s*3){this.checkFaceType(2);for(i=4,o=a-3;i<o;i+=3){this.buildFace(e[1],e[2],e[3]);this.buildFace(e[i],e[i+1],e[i+2]);this.buildFace(e[i+3],e[i+4],e[i+5])}}else{this.checkFaceType(3);for(i=3,o=a-2;i<o;i+=2){this.buildFace(e[1],undefined,e[2]);this.buildFace(e[i],undefined,e[i+1]);this.buildFace(e[i+2],undefined,e[i+3])}}break;case"l":case"p":a=t-1;if(a===s*2){this.checkFaceType(4);for(i=1,o=a+1;i<o;i+=2)this.buildFace(e[i],e[i+1])}else{this.checkFaceType(n==="l"?5:6);for(i=1,o=a+1;i<o;i++)this.buildFace(e[i])}break;case"s":this.pushSmoothingGroup(e[1]);break;case"g":this.processCompletedMesh();this.rawMesh.groupName=r(this.contentRef,this.legacyMode,this.globalCounts.lineByte+2,this.globalCounts.currentByte);break;case"o":if(this.useOAsMesh)this.processCompletedMesh();this.rawMesh.objectName=r(this.contentRef,this.legacyMode,this.globalCounts.lineByte+2,this.globalCounts.currentByte);break;case"mtllib":this.rawMesh.mtllibName=r(this.contentRef,this.legacyMode,this.globalCounts.lineByte+7,this.globalCounts.currentByte);break;case"usemtl":var l=r(this.contentRef,this.legacyMode,this.globalCounts.lineByte+7,this.globalCounts.currentByte);if(l!==""&&this.rawMesh.activeMtlName!==l){this.rawMesh.activeMtlName=l;this.rawMesh.counts.mtlCount++;this.checkSubGroup()}break;default:break}},pushSmoothingGroup:function(e){var t=parseInt(e);if(isNaN(t)){t=e==="off"?0:1}var s=this.rawMesh.smoothingGroup.normalized;this.rawMesh.smoothingGroup.normalized=this.rawMesh.smoothingGroup.splitMaterials?t:t===0?0:1;this.rawMesh.smoothingGroup.real=t;if(s!==t){this.rawMesh.counts.smoothingGroupCount++;this.checkSubGroup()}},checkFaceType:function(e){if(this.rawMesh.faceType!==e){this.processCompletedMesh();this.rawMesh.faceType=e;this.checkSubGroup()}},checkSubGroup:function(){var e=this.rawMesh.activeMtlName+"|"+this.rawMesh.smoothingGroup.normalized;this.rawMesh.subGroupInUse=this.rawMesh.subGroups[e];if(!THREE.LoaderSupport.Validator.isValid(this.rawMesh.subGroupInUse)){this.rawMesh.subGroupInUse={index:e,objectName:this.rawMesh.objectName,groupName:this.rawMesh.groupName,materialName:this.rawMesh.activeMtlName,smoothingGroup:this.rawMesh.smoothingGroup.normalized,vertices:[],indexMappingsCount:0,indexMappings:[],indices:[],colors:[],uvs:[],normals:[]};this.rawMesh.subGroups[e]=this.rawMesh.subGroupInUse}},buildFace:function(e,t,s){if(this.disregardNormals)s=undefined;var r=this;var a=function(){var a=parseInt(e);var o=3*(a>0?a-1:a+r.vertices.length/3);var i=r.colors.length>0?o:null;var n=r.rawMesh.subGroupInUse.vertices;n.push(r.vertices[o++]);n.push(r.vertices[o++]);n.push(r.vertices[o]);if(i!==null){var l=r.rawMesh.subGroupInUse.colors;l.push(r.colors[i++]);l.push(r.colors[i++]);l.push(r.colors[i])}if(t){var u=parseInt(t);var h=2*(u>0?u-1:u+r.uvs.length/2);var d=r.rawMesh.subGroupInUse.uvs;d.push(r.uvs[h++]);d.push(r.uvs[h])}if(s){var c=parseInt(s);var p=3*(c>0?c-1:c+r.normals.length/3);var g=r.rawMesh.subGroupInUse.normals;g.push(r.normals[p++]);g.push(r.normals[p++]);g.push(r.normals[p])}};if(this.useIndices){var o=e+(t?"_"+t:"_n")+(s?"_"+s:"_n");var i=this.rawMesh.subGroupInUse.indexMappings[o];if(THREE.LoaderSupport.Validator.isValid(i)){this.rawMesh.counts.doubleIndicesCount++}else{i=this.rawMesh.subGroupInUse.vertices.length/3;a();this.rawMesh.subGroupInUse.indexMappings[o]=i;this.rawMesh.subGroupInUse.indexMappingsCount++}this.rawMesh.subGroupInUse.indices.push(i)}else{a()}this.rawMesh.counts.faceCount++},createRawMeshReport:function(e){return"Input Object number: "+e+"\n\tObject name: "+this.rawMesh.objectName+"\n\tGroup name: "+this.rawMesh.groupName+"\n\tMtllib name: "+this.rawMesh.mtllibName+"\n\tVertex count: "+this.vertices.length/3+"\n\tNormal count: "+this.normals.length/3+"\n\tUV count: "+this.uvs.length/2+"\n\tSmoothingGroup count: "+this.rawMesh.counts.smoothingGroupCount+"\n\tMaterial count: "+this.rawMesh.counts.mtlCount+"\n\tReal MeshOutputGroup count: "+this.rawMesh.subGroups.length},finalizeRawMesh:function(){var e=[];var t;var s=0;var r=0;var a=0;var o=0;var i=0;var n=0;var l;for(var u in this.rawMesh.subGroups){t=this.rawMesh.subGroups[u];if(t.vertices.length>0){l=t.indices;if(l.length>0&&r>0){for(var h in l)l[h]=l[h]+r}e.push(t);s+=t.vertices.length;r+=t.indexMappingsCount;a+=t.indices.length;o+=t.colors.length;n+=t.uvs.length;i+=t.normals.length}}var d=null;if(e.length>0){d={name:this.rawMesh.groupName!==""?this.rawMesh.groupName:this.rawMesh.objectName,subGroups:e,absoluteVertexCount:s,absoluteIndexCount:a,absoluteColorCount:o,absoluteNormalCount:i,absoluteUvCount:n,faceCount:this.rawMesh.counts.faceCount,doubleIndicesCount:this.rawMesh.counts.doubleIndicesCount}}return d},processCompletedMesh:function(){var e=this.finalizeRawMesh();if(THREE.LoaderSupport.Validator.isValid(e)){if(this.colors.length>0&&this.colors.length!==this.vertices.length){this._throwError("Vertex Colors were detected, but vertex count and color count do not match!")}if(this.logging.enabled&&this.logging.debug)console.debug(this.createRawMeshReport(this.inputObjectCount));this.inputObjectCount++;this.buildMesh(e);var t=this.globalCounts.currentByte/this.globalCounts.totalBytes;this.callbackProgress("Completed [o: "+this.rawMesh.objectName+" g:"+this.rawMesh.groupName+"] Total progress: "+(t*100).toFixed(2)+"%",t);this.resetRawMesh();return true}else{return false}},buildMesh:function(e){var t=e.subGroups;var s=new Float32Array(e.absoluteVertexCount);this.globalCounts.vertices+=e.absoluteVertexCount/3;this.globalCounts.faces+=e.faceCount;this.globalCounts.doubleIndicesCount+=e.doubleIndicesCount;var r=e.absoluteIndexCount>0?new Uint32Array(e.absoluteIndexCount):null;var a=e.absoluteColorCount>0?new Float32Array(e.absoluteColorCount):null;var o=e.absoluteNormalCount>0?new Float32Array(e.absoluteNormalCount):null;var i=e.absoluteUvCount>0?new Float32Array(e.absoluteUvCount):null;var n=THREE.LoaderSupport.Validator.isValid(a);var l;var u=[];var h=t.length>1;var d=0;var c=[];var p;var g;var f=[];var m=0;var b=0;var v=0;var E=0;var M=0;var L=0;var R=0;var T,w,C,S;for(var y in t){if(!t.hasOwnProperty(y))continue;l=t[y];S=l.materialName;if(this.rawMesh.faceType<4){C=S+(n?"_vertexColor":"")+(l.smoothingGroup===0?"_flat":"")}else{C=this.rawMesh.faceType===6?"defaultPointMaterial":"defaultLineMaterial"}T=this.materials[S];w=this.materials[C];if(!THREE.LoaderSupport.Validator.isValid(T)&&!THREE.LoaderSupport.Validator.isValid(w)){var V=n?"defaultVertexColorMaterial":"defaultMaterial";T=this.materials[V];if(this.logging.enabled)console.warn('object_group "'+l.objectName+"_"+l.groupName+'" was defined with unresolvable material "'+S+'"! Assigning "'+V+'".');S=V;if(S===C){w=T;C=V}}if(!THREE.LoaderSupport.Validator.isValid(w)){var N={materialNameOrg:S,materialName:C,materialProperties:{vertexColors:n?2:0,flatShading:l.smoothingGroup===0}};var k={cmd:"materialData",materials:{materialCloneInstructions:N}};this.callbackMeshBuilder(k);if(this.useAsync)this.materials[C]=N}if(h){p=c[C];if(!p){p=d;c[C]=d;u.push(C);d++}R=this.useIndices?l.indices.length:l.vertices.length/3;g={start:L,count:R,index:p};f.push(g);L+=R}else{u.push(C)}s.set(l.vertices,m);m+=l.vertices.length;if(r){r.set(l.indices,b);b+=l.indices.length}if(a){a.set(l.colors,v);v+=l.colors.length}if(o){o.set(l.normals,E);E+=l.normals.length}if(i){i.set(l.uvs,M);M+=l.uvs.length}if(this.logging.enabled&&this.logging.debug){var H=THREE.LoaderSupport.Validator.isValid(p)?"\n\t\tmaterialIndex: "+p:"";var O="\tOutput Object no.: "+this.outputObjectCount+"\n\t\tgroupName: "+l.groupName+"\n\t\tIndex: "+l.index+"\n\t\tfaceType: "+this.rawMesh.faceType+"\n\t\tmaterialName: "+l.materialName+"\n\t\tsmoothingGroup: "+l.smoothingGroup+H+"\n\t\tobjectName: "+l.objectName+"\n\t\t#vertices: "+l.vertices.length/3+"\n\t\t#indices: "+l.indices.length+"\n\t\t#colors: "+l.colors.length/3+"\n\t\t#uvs: "+l.uvs.length/2+"\n\t\t#normals: "+l.normals.length/3;console.debug(O)}}this.outputObjectCount++;this.callbackMeshBuilder({cmd:"meshData",progress:{numericalValue:this.globalCounts.currentByte/this.globalCounts.totalBytes},params:{meshName:e.name},materials:{multiMaterial:h,materialNames:u,materialGroups:f},buffers:{vertices:s,indices:r,colors:a,normals:o,uvs:i},geometryType:this.rawMesh.faceType<4?0:this.rawMesh.faceType===6?2:1},[s.buffer],THREE.LoaderSupport.Validator.isValid(r)?[r.buffer]:null,THREE.LoaderSupport.Validator.isValid(a)?[a.buffer]:null,THREE.LoaderSupport.Validator.isValid(o)?[o.buffer]:null,THREE.LoaderSupport.Validator.isValid(i)?[i.buffer]:null)},finalizeParsing:function(){if(this.logging.enabled)console.info("Global output object count: "+this.outputObjectCount);if(this.processCompletedMesh()&&this.logging.enabled){var e="Overall counts: "+"\n\tVertices: "+this.globalCounts.vertices+"\n\tFaces: "+this.globalCounts.faces+"\n\tMultiple definitions: "+this.globalCounts.doubleIndicesCount;console.info(e)}}};
//# sourceMappingURL=OBJLoader2.min.min.js.map