THREE.FBXLoader=function(){var e;var r;var t;function a(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager}a.prototype={constructor:a,crossOrigin:"anonymous",load:function(e,r,t,a){var n=this;var i=n.path===undefined?THREE.LoaderUtils.extractUrlBase(e):n.path;var o=new THREE.FileLoader(this.manager);o.setPath(n.path);o.setResponseType("arraybuffer");o.load(e,function(t){try{r(n.parse(t,i))}catch(r){setTimeout(function(){if(a)a(r);n.manager.itemError(e)},0)}},t,a)},setPath:function(e){this.path=e;return this},setResourcePath:function(e){this.resourcePath=e;return this},setCrossOrigin:function(e){this.crossOrigin=e;return this},parse:function(r,t){if(c(r)){e=(new u).parse(r)}else{var a=w(r);if(!p(a)){throw new Error("THREE.FBXLoader: Unknown format.")}if(v(a)<7e3){throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+v(a))}e=(new s).parse(a)}var i=new THREE.TextureLoader(this.manager).setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);return new n(i).parse(e)}};function n(e){this.textureLoader=e}n.prototype={constructor:n,parse:function(){r=this.parseConnections();var e=this.parseImages();var a=this.parseTextures(e);var n=this.parseMaterials(a);var o=this.parseDeformers();var s=(new i).parse(o);this.parseScene(o,s,n);return t},parseConnections:function(){var r=new Map;if("Connections"in e){var t=e.Connections.connections;t.forEach(function(e){var t=e[0];var a=e[1];var n=e[2];if(!r.has(t)){r.set(t,{parents:[],children:[]})}var i={ID:a,relationship:n};r.get(t).parents.push(i);if(!r.has(a)){r.set(a,{parents:[],children:[]})}var o={ID:t,relationship:n};r.get(a).children.push(o)})}return r},parseImages:function(){var r={};var t={};if("Video"in e.Objects){var a=e.Objects.Video;for(var n in a){var i=a[n];var o=parseInt(n);r[o]=i.RelativeFilename||i.Filename;if("Content"in i){var s=i.Content instanceof ArrayBuffer&&i.Content.byteLength>0;var u=typeof i.Content==="string"&&i.Content!=="";if(s||u){var f=this.parseImage(a[n]);t[i.RelativeFilename||i.Filename]=f}}}}for(var o in r){var l=r[o];if(t[l]!==undefined)r[o]=t[l];else r[o]=r[o].split("\\").pop()}return r},parseImage:function(e){var r=e.Content;var t=e.RelativeFilename||e.Filename;var a=t.slice(t.lastIndexOf(".")+1).toLowerCase();var n;switch(a){case"bmp":n="image/bmp";break;case"jpg":case"jpeg":n="image/jpeg";break;case"png":n="image/png";break;case"tif":n="image/tiff";break;case"tga":if(typeof THREE.TGALoader!=="function"){console.warn("FBXLoader: THREE.TGALoader is required to load TGA textures");return}else{if(THREE.Loader.Handlers.get(".tga")===null){var i=new THREE.TGALoader;i.setPath(this.textureLoader.path);THREE.Loader.Handlers.add(/\.tga$/i,i)}n="image/tga";break}default:console.warn('FBXLoader: Image type "'+a+'" is not supported.');return}if(typeof r==="string"){return"data:"+n+";base64,"+r}else{var o=new Uint8Array(r);return window.URL.createObjectURL(new Blob([o],{type:n}))}},parseTextures:function(r){var t=new Map;if("Texture"in e.Objects){var a=e.Objects.Texture;for(var n in a){var i=this.parseTexture(a[n],r);t.set(parseInt(n),i)}}return t},parseTexture:function(e,r){var t=this.loadTexture(e,r);t.ID=e.id;t.name=e.attrName;var a=e.WrapModeU;var n=e.WrapModeV;var i=a!==undefined?a.value:0;var o=n!==undefined?n.value:0;t.wrapS=i===0?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping;t.wrapT=o===0?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping;if("Scaling"in e){var s=e.Scaling.value;t.repeat.x=s[0];t.repeat.y=s[1]}return t},loadTexture:function(e,t){var a;var n=this.textureLoader.path;var i=r.get(e.id).children;if(i!==undefined&&i.length>0&&t[i[0].ID]!==undefined){a=t[i[0].ID];if(a.indexOf("blob:")===0||a.indexOf("data:")===0){this.textureLoader.setPath(undefined)}}var o;var s=e.FileName.slice(-3).toLowerCase();if(s==="tga"){var u=THREE.Loader.Handlers.get(".tga");if(u===null){console.warn("FBXLoader: TGALoader not found, creating empty placeholder texture for",a);o=new THREE.Texture}else{o=u.load(a)}}else if(s==="psd"){console.warn("FBXLoader: PSD textures are not supported, creating empty placeholder texture for",a);o=new THREE.Texture}else{o=this.textureLoader.load(a)}this.textureLoader.setPath(n);return o},parseMaterials:function(r){var t=new Map;if("Material"in e.Objects){var a=e.Objects.Material;for(var n in a){var i=this.parseMaterial(a[n],r);if(i!==null)t.set(parseInt(n),i)}}return t},parseMaterial:function(e,t){var a=e.id;var n=e.attrName;var i=e.ShadingModel;if(typeof i==="object"){i=i.value}if(!r.has(a))return null;var o=this.parseParameters(e,t,a);var s;switch(i.toLowerCase()){case"phong":s=new THREE.MeshPhongMaterial;break;case"lambert":s=new THREE.MeshLambertMaterial;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',i);s=new THREE.MeshPhongMaterial;break}s.setValues(o);s.name=n;return s},parseParameters:function(e,t,a){var n={};if(e.BumpFactor){n.bumpScale=e.BumpFactor.value}if(e.Diffuse){n.color=(new THREE.Color).fromArray(e.Diffuse.value)}else if(e.DiffuseColor&&e.DiffuseColor.type==="Color"){n.color=(new THREE.Color).fromArray(e.DiffuseColor.value)}if(e.DisplacementFactor){n.displacementScale=e.DisplacementFactor.value}if(e.Emissive){n.emissive=(new THREE.Color).fromArray(e.Emissive.value)}else if(e.EmissiveColor&&e.EmissiveColor.type==="Color"){n.emissive=(new THREE.Color).fromArray(e.EmissiveColor.value)}if(e.EmissiveFactor){n.emissiveIntensity=parseFloat(e.EmissiveFactor.value)}if(e.Opacity){n.opacity=parseFloat(e.Opacity.value)}if(n.opacity<1){n.transparent=true}if(e.ReflectionFactor){n.reflectivity=e.ReflectionFactor.value}if(e.Shininess){n.shininess=e.Shininess.value}if(e.Specular){n.specular=(new THREE.Color).fromArray(e.Specular.value)}else if(e.SpecularColor&&e.SpecularColor.type==="Color"){n.specular=(new THREE.Color).fromArray(e.SpecularColor.value)}var i=this;r.get(a).children.forEach(function(e){var r=e.relationship;switch(r){case"Bump":n.bumpMap=i.getTexture(t,e.ID);break;case"Maya|TEX_ao_map":n.aoMap=i.getTexture(t,e.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":n.map=i.getTexture(t,e.ID);break;case"DisplacementColor":n.displacementMap=i.getTexture(t,e.ID);break;case"EmissiveColor":n.emissiveMap=i.getTexture(t,e.ID);break;case"NormalMap":case"Maya|TEX_normal_map":n.normalMap=i.getTexture(t,e.ID);break;case"ReflectionColor":n.envMap=i.getTexture(t,e.ID);n.envMap.mapping=THREE.EquirectangularReflectionMapping;break;case"SpecularColor":n.specularMap=i.getTexture(t,e.ID);break;case"TransparentColor":n.alphaMap=i.getTexture(t,e.ID);n.transparent=true;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",r);break}});return n},getTexture:function(t,a){if("LayeredTexture"in e.Objects&&a in e.Objects.LayeredTexture){console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.");a=r.get(a).children[0].ID}return t.get(a)},parseDeformers:function(){var t={};var a={};if("Deformer"in e.Objects){var n=e.Objects.Deformer;for(var i in n){var o=n[i];var s=r.get(parseInt(i));if(o.attrType==="Skin"){var u=this.parseSkeleton(s,n);u.ID=i;if(s.parents.length>1)console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported.");u.geometryID=s.parents[0].ID;t[i]=u}else if(o.attrType==="BlendShape"){var f={id:i};f.rawTargets=this.parseMorphTargets(s,n);f.id=i;if(s.parents.length>1)console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported.");a[i]=f}}}return{skeletons:t,morphTargets:a}},parseSkeleton:function(e,r){var t=[];e.children.forEach(function(e){var a=r[e.ID];if(a.attrType!=="Cluster")return;var n={ID:e.ID,indices:[],weights:[],transformLink:(new THREE.Matrix4).fromArray(a.TransformLink.a)};if("Indexes"in a){n.indices=a.Indexes.a;n.weights=a.Weights.a}t.push(n)});return{rawBones:t,bones:[]}},parseMorphTargets:function(e,t){var a=[];for(var n=0;n<e.children.length;n++){var i=e.children[n];var o=t[i.ID];var s={name:o.attrName,initialWeight:o.DeformPercent,id:o.id,fullWeights:o.FullWeights.a};if(o.attrType!=="BlendShapeChannel")return;s.geoID=r.get(parseInt(i.ID)).children.filter(function(e){return e.relationship===undefined})[0].ID;a.push(s)}return a},parseScene:function(a,n,i){t=new THREE.Group;var s=this.parseModels(a.skeletons,n,i);var u=e.Objects.Model;var f=this;s.forEach(function(e){var a=u[e.ID];f.setLookAtProperties(e,a);var n=r.get(e.ID).parents;n.forEach(function(r){var t=s.get(r.ID);if(t!==undefined)t.add(e)});if(e.parent===null){t.add(e)}});this.bindSkeleton(a.skeletons,n,s);this.createAmbientLight();this.setupMorphMaterials();t.traverse(function(e){if(e.userData.transformData){if(e.parent)e.userData.transformData.parentMatrixWorld=e.parent.matrix;var r=y(e.userData.transformData);e.applyMatrix(r)}});var l=(new o).parse();if(t.children.length===1&&t.children[0].isGroup){t.children[0].animations=l;t=t.children[0]}t.animations=l},parseModels:function(t,a,n){var i=new Map;var o=e.Objects.Model;for(var s in o){var u=parseInt(s);var f=o[s];var l=r.get(u);var c=this.buildSkeleton(l,t,u,f.attrName);if(!c){switch(f.attrType){case"Camera":c=this.createCamera(l);break;case"Light":c=this.createLight(l);break;case"Mesh":c=this.createMesh(l,a,n);break;case"NurbsCurve":c=this.createCurve(l,a);break;case"LimbNode":case"Root":c=new THREE.Bone;break;case"Null":default:c=new THREE.Group;break}c.name=THREE.PropertyBinding.sanitizeNodeName(f.attrName);c.ID=u}this.getTransformData(c,f);i.set(u,c)}return i},buildSkeleton:function(e,r,t,a){var n=null;e.parents.forEach(function(e){for(var i in r){var o=r[i];o.rawBones.forEach(function(r,i){if(r.ID===e.ID){var s=n;n=new THREE.Bone;n.matrixWorld.copy(r.transformLink);n.name=THREE.PropertyBinding.sanitizeNodeName(a);n.ID=t;o.bones[i]=n;if(s!==null){n.add(s)}}})}});return n},createCamera:function(r){var t;var a;r.children.forEach(function(r){var t=e.Objects.NodeAttribute[r.ID];if(t!==undefined){a=t}});if(a===undefined){t=new THREE.Object3D}else{var n=0;if(a.CameraProjectionType!==undefined&&a.CameraProjectionType.value===1){n=1}var i=1;if(a.NearPlane!==undefined){i=a.NearPlane.value/1e3}var o=1e3;if(a.FarPlane!==undefined){o=a.FarPlane.value/1e3}var s=window.innerWidth;var u=window.innerHeight;if(a.AspectWidth!==undefined&&a.AspectHeight!==undefined){s=a.AspectWidth.value;u=a.AspectHeight.value}var f=s/u;var l=45;if(a.FieldOfView!==undefined){l=a.FieldOfView.value}var c=a.FocalLength?a.FocalLength.value:null;switch(n){case 0:t=new THREE.PerspectiveCamera(l,f,i,o);if(c!==null)t.setFocalLength(c);break;case 1:t=new THREE.OrthographicCamera(-s/2,s/2,u/2,-u/2,i,o);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+n+".");t=new THREE.Object3D;break}}return t},createLight:function(r){var t;var a;r.children.forEach(function(r){var t=e.Objects.NodeAttribute[r.ID];if(t!==undefined){a=t}});if(a===undefined){t=new THREE.Object3D}else{var n;if(a.LightType===undefined){n=0}else{n=a.LightType.value}var i=16777215;if(a.Color!==undefined){i=(new THREE.Color).fromArray(a.Color.value)}var o=a.Intensity===undefined?1:a.Intensity.value/100;if(a.CastLightOnObject!==undefined&&a.CastLightOnObject.value===0){o=0}var s=0;if(a.FarAttenuationEnd!==undefined){if(a.EnableFarAttenuation!==undefined&&a.EnableFarAttenuation.value===0){s=0}else{s=a.FarAttenuationEnd.value}}var u=1;switch(n){case 0:t=new THREE.PointLight(i,o,s,u);break;case 1:t=new THREE.DirectionalLight(i,o);break;case 2:var f=Math.PI/3;if(a.InnerAngle!==undefined){f=THREE.Math.degToRad(a.InnerAngle.value)}var l=0;if(a.OuterAngle!==undefined){l=THREE.Math.degToRad(a.OuterAngle.value);l=Math.max(l,1)}t=new THREE.SpotLight(i,o,s,f,l,u);break;default:console.warn("THREE.FBXLoader: Unknown light type "+a.LightType.value+", defaulting to a THREE.PointLight.");t=new THREE.PointLight(i,o);break}if(a.CastShadows!==undefined&&a.CastShadows.value===1){t.castShadow=true}}return t},createMesh:function(e,r,t){var a;var n=null;var i=null;var o=[];e.children.forEach(function(e){if(r.has(e.ID)){n=r.get(e.ID)}if(t.has(e.ID)){o.push(t.get(e.ID))}});if(o.length>1){i=o}else if(o.length>0){i=o[0]}else{i=new THREE.MeshPhongMaterial({color:13421772});o.push(i)}if("color"in n.attributes){o.forEach(function(e){e.vertexColors=THREE.VertexColors})}if(n.FBX_Deformer){o.forEach(function(e){e.skinning=true});a=new THREE.SkinnedMesh(n,i);a.normalizeSkinWeights()}else{a=new THREE.Mesh(n,i)}return a},createCurve:function(e,r){var t=e.children.reduce(function(e,t){if(r.has(t.ID))e=r.get(t.ID);return e},null);var a=new THREE.LineBasicMaterial({color:3342591,linewidth:1});return new THREE.Line(t,a)},getTransformData:function(e,r){var t={};if("InheritType"in r)t.inheritType=parseInt(r.InheritType.value);if("RotationOrder"in r)t.eulerOrder=T(r.RotationOrder.value);else t.eulerOrder="ZYX";if("Lcl_Translation"in r)t.translation=r.Lcl_Translation.value;if("PreRotation"in r)t.preRotation=r.PreRotation.value;if("Lcl_Rotation"in r)t.rotation=r.Lcl_Rotation.value;if("PostRotation"in r)t.postRotation=r.PostRotation.value;if("Lcl_Scaling"in r)t.scale=r.Lcl_Scaling.value;if("ScalingOffset"in r)t.scalingOffset=r.ScalingOffset.value;if("ScalingPivot"in r)t.scalingPivot=r.ScalingPivot.value;if("RotationOffset"in r)t.rotationOffset=r.RotationOffset.value;if("RotationPivot"in r)t.rotationPivot=r.RotationPivot.value;e.userData.transformData=t},setLookAtProperties:function(a,n){if("LookAtProperty"in n){var i=r.get(a.ID).children;i.forEach(function(r){if(r.relationship==="LookAtProperty"){var n=e.Objects.Model[r.ID];if("Lcl_Translation"in n){var i=n.Lcl_Translation.value;if(a.target!==undefined){a.target.position.fromArray(i);t.add(a.target)}else{a.lookAt((new THREE.Vector3).fromArray(i))}}}})}},bindSkeleton:function(e,t,a){var n=this.parsePoseNodes();for(var i in e){var o=e[i];var s=r.get(parseInt(o.ID)).parents;s.forEach(function(e){if(t.has(e.ID)){var i=e.ID;var s=r.get(i);s.parents.forEach(function(e){if(a.has(e.ID)){var r=a.get(e.ID);r.bind(new THREE.Skeleton(o.bones),n[e.ID])}})}})}},parsePoseNodes:function(){var r={};if("Pose"in e.Objects){var t=e.Objects.Pose;for(var a in t){if(t[a].attrType==="BindPose"){var n=t[a].PoseNode;if(Array.isArray(n)){n.forEach(function(e){r[e.Node]=(new THREE.Matrix4).fromArray(e.Matrix.a)})}else{r[n.Node]=(new THREE.Matrix4).fromArray(n.Matrix.a)}}}}return r},createAmbientLight:function(){if("GlobalSettings"in e&&"AmbientColor"in e.GlobalSettings){var r=e.GlobalSettings.AmbientColor.value;var a=r[0];var n=r[1];var i=r[2];if(a!==0||n!==0||i!==0){var o=new THREE.Color(a,n,i);t.add(new THREE.AmbientLight(o,1))}}},setupMorphMaterials:function(){var e=this;t.traverse(function(r){if(r.isMesh){if(r.geometry.morphAttributes.position&&r.geometry.morphAttributes.position.length){if(Array.isArray(r.material)){r.material.forEach(function(t,a){e.setupMorphMaterial(r,t,a)})}else{e.setupMorphMaterial(r,r.material)}}}})},setupMorphMaterial:function(e,r,a){var n=e.uuid;var i=r.uuid;var o=false;t.traverse(function(e){if(e.isMesh){if(Array.isArray(e.material)){e.material.forEach(function(r){if(r.uuid===i&&e.uuid!==n)o=true})}else if(e.material.uuid===i&&e.uuid!==n)o=true}});if(o===true){var s=r.clone();s.morphTargets=true;if(a===undefined)e.material=s;else e.material[a]=s}else r.morphTargets=true}};function i(){}i.prototype={constructor:i,parse:function(t){var a=new Map;if("Geometry"in e.Objects){var n=e.Objects.Geometry;for(var i in n){var o=r.get(parseInt(i));var s=this.parseGeometry(o,n[i],t);a.set(parseInt(i),s)}}return a},parseGeometry:function(e,r,t){switch(r.attrType){case"Mesh":return this.parseMeshGeometry(e,r,t);break;case"NurbsCurve":return this.parseNurbsGeometry(r);break}},parseMeshGeometry:function(r,t,a){var n=a.skeletons;var i=a.morphTargets;var o=r.parents.map(function(r){return e.Objects.Model[r.ID]});if(o.length===0)return;var s=r.children.reduce(function(e,r){if(n[r.ID]!==undefined)e=n[r.ID];return e},null);var u=r.children.reduce(function(e,r){if(i[r.ID]!==undefined)e=i[r.ID];return e},null);var f=o[0];var l={};if("RotationOrder"in f)l.eulerOrder=T(f.RotationOrder.value);if("InheritType"in f)l.inheritType=parseInt(f.InheritType.value);if("GeometricTranslation"in f)l.translation=f.GeometricTranslation.value;if("GeometricRotation"in f)l.rotation=f.GeometricRotation.value;if("GeometricScaling"in f)l.scale=f.GeometricScaling.value;var c=y(l);return this.genGeometry(t,s,u,c)},genGeometry:function(e,r,t,a){var n=new THREE.BufferGeometry;if(e.attrName)n.name=e.attrName;var i=this.parseGeoNode(e,r);var o=this.genBuffers(i);var s=new THREE.Float32BufferAttribute(o.vertex,3);a.applyToBufferAttribute(s);n.addAttribute("position",s);if(o.colors.length>0){n.addAttribute("color",new THREE.Float32BufferAttribute(o.colors,3))}if(r){n.addAttribute("skinIndex",new THREE.Uint16BufferAttribute(o.weightsIndices,4));n.addAttribute("skinWeight",new THREE.Float32BufferAttribute(o.vertexWeights,4));n.FBX_Deformer=r}if(o.normal.length>0){var u=new THREE.Float32BufferAttribute(o.normal,3);var f=(new THREE.Matrix3).getNormalMatrix(a);f.applyToBufferAttribute(u);n.addAttribute("normal",u)}o.uvs.forEach(function(e,r){var t="uv"+(r+1).toString();if(r===0){t="uv"}n.addAttribute(t,new THREE.Float32BufferAttribute(o.uvs[r],2))});if(i.material&&i.material.mappingType!=="AllSame"){var l=o.materialIndex[0];var c=0;o.materialIndex.forEach(function(e,r){if(e!==l){n.addGroup(c,r-c,l);l=e;c=r}});if(n.groups.length>0){var p=n.groups[n.groups.length-1];var v=p.start+p.count;if(v!==o.materialIndex.length){n.addGroup(v,o.materialIndex.length-v,l)}}if(n.groups.length===0){n.addGroup(0,o.materialIndex.length,o.materialIndex[0])}}this.addMorphTargets(n,e,t,a);return n},parseGeoNode:function(e,r){var t={};t.vertexPositions=e.Vertices!==undefined?e.Vertices.a:[];t.vertexIndices=e.PolygonVertexIndex!==undefined?e.PolygonVertexIndex.a:[];if(e.LayerElementColor){t.color=this.parseVertexColors(e.LayerElementColor[0])}if(e.LayerElementMaterial){t.material=this.parseMaterialIndices(e.LayerElementMaterial[0])}if(e.LayerElementNormal){t.normal=this.parseNormals(e.LayerElementNormal[0])}if(e.LayerElementUV){t.uv=[];var a=0;while(e.LayerElementUV[a]){t.uv.push(this.parseUVs(e.LayerElementUV[a]));a++}}t.weightTable={};if(r!==null){t.skeleton=r;r.rawBones.forEach(function(e,r){e.indices.forEach(function(a,n){if(t.weightTable[a]===undefined)t.weightTable[a]=[];t.weightTable[a].push({id:r,weight:e.weights[n]})})})}return t},genBuffers:function(e){var r={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]};var t=0;var a=0;var n=false;var i=[];var o=[];var s=[];var u=[];var f=[];var l=[];var c=this;e.vertexIndices.forEach(function(p,v){var d=false;if(p<0){p=p^-1;d=true}var h=[];var g=[];i.push(p*3,p*3+1,p*3+2);if(e.color){var E=m(v,t,p,e.color);s.push(E[0],E[1],E[2])}if(e.skeleton){if(e.weightTable[p]!==undefined){e.weightTable[p].forEach(function(e){g.push(e.weight);h.push(e.id)})}if(g.length>4){if(!n){console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.");n=true}var y=[0,0,0,0];var T=[0,0,0,0];g.forEach(function(e,r){var t=e;var a=h[r];T.forEach(function(e,r,n){if(t>e){n[r]=t;t=e;var i=y[r];y[r]=a;a=i}})});h=y;g=T}while(g.length<4){g.push(0);h.push(0)}for(var R=0;R<4;++R){f.push(g[R]);l.push(h[R])}}if(e.normal){var E=m(v,t,p,e.normal);o.push(E[0],E[1],E[2])}if(e.material&&e.material.mappingType!=="AllSame"){var w=m(v,t,p,e.material)[0]}if(e.uv){e.uv.forEach(function(e,r){var a=m(v,t,p,e);if(u[r]===undefined){u[r]=[]}u[r].push(a[0]);u[r].push(a[1])})}a++;if(d){c.genFace(r,e,i,w,o,s,u,f,l,a);t++;a=0;i=[];o=[];s=[];u=[];f=[];l=[]}});return r},genFace:function(e,r,t,a,n,i,o,s,u,f){for(var l=2;l<f;l++){e.vertex.push(r.vertexPositions[t[0]]);e.vertex.push(r.vertexPositions[t[1]]);e.vertex.push(r.vertexPositions[t[2]]);e.vertex.push(r.vertexPositions[t[(l-1)*3]]);e.vertex.push(r.vertexPositions[t[(l-1)*3+1]]);e.vertex.push(r.vertexPositions[t[(l-1)*3+2]]);e.vertex.push(r.vertexPositions[t[l*3]]);e.vertex.push(r.vertexPositions[t[l*3+1]]);e.vertex.push(r.vertexPositions[t[l*3+2]]);if(r.skeleton){e.vertexWeights.push(s[0]);e.vertexWeights.push(s[1]);e.vertexWeights.push(s[2]);e.vertexWeights.push(s[3]);e.vertexWeights.push(s[(l-1)*4]);e.vertexWeights.push(s[(l-1)*4+1]);e.vertexWeights.push(s[(l-1)*4+2]);e.vertexWeights.push(s[(l-1)*4+3]);e.vertexWeights.push(s[l*4]);e.vertexWeights.push(s[l*4+1]);e.vertexWeights.push(s[l*4+2]);e.vertexWeights.push(s[l*4+3]);e.weightsIndices.push(u[0]);e.weightsIndices.push(u[1]);e.weightsIndices.push(u[2]);e.weightsIndices.push(u[3]);e.weightsIndices.push(u[(l-1)*4]);e.weightsIndices.push(u[(l-1)*4+1]);e.weightsIndices.push(u[(l-1)*4+2]);e.weightsIndices.push(u[(l-1)*4+3]);e.weightsIndices.push(u[l*4]);e.weightsIndices.push(u[l*4+1]);e.weightsIndices.push(u[l*4+2]);e.weightsIndices.push(u[l*4+3])}if(r.color){e.colors.push(i[0]);e.colors.push(i[1]);e.colors.push(i[2]);e.colors.push(i[(l-1)*3]);e.colors.push(i[(l-1)*3+1]);e.colors.push(i[(l-1)*3+2]);e.colors.push(i[l*3]);e.colors.push(i[l*3+1]);e.colors.push(i[l*3+2])}if(r.material&&r.material.mappingType!=="AllSame"){e.materialIndex.push(a);e.materialIndex.push(a);e.materialIndex.push(a)}if(r.normal){e.normal.push(n[0]);e.normal.push(n[1]);e.normal.push(n[2]);e.normal.push(n[(l-1)*3]);e.normal.push(n[(l-1)*3+1]);e.normal.push(n[(l-1)*3+2]);e.normal.push(n[l*3]);e.normal.push(n[l*3+1]);e.normal.push(n[l*3+2])}if(r.uv){r.uv.forEach(function(r,t){if(e.uvs[t]===undefined)e.uvs[t]=[];e.uvs[t].push(o[t][0]);e.uvs[t].push(o[t][1]);e.uvs[t].push(o[t][(l-1)*2]);e.uvs[t].push(o[t][(l-1)*2+1]);e.uvs[t].push(o[t][l*2]);e.uvs[t].push(o[t][l*2+1])})}}},addMorphTargets:function(r,t,a,n){if(a===null)return;r.morphAttributes.position=[];var i=this;a.rawTargets.forEach(function(a){var o=e.Objects.Geometry[a.geoID];if(o!==undefined){i.genMorphGeometry(r,t,o,n,a.name)}})},genMorphGeometry:function(e,r,t,a,n){var i=new THREE.BufferGeometry;if(t.attrName)i.name=t.attrName;var o=r.PolygonVertexIndex!==undefined?r.PolygonVertexIndex.a:[];var s=r.Vertices!==undefined?r.Vertices.a.slice():[];var u=t.Vertices!==undefined?t.Vertices.a:[];var f=t.Indexes!==undefined?t.Indexes.a:[];for(var l=0;l<f.length;l++){var c=f[l]*3;s[c]+=u[l*3];s[c+1]+=u[l*3+1];s[c+2]+=u[l*3+2]}var p={vertexIndices:o,vertexPositions:s};var v=this.genBuffers(p);var d=new THREE.Float32BufferAttribute(v.vertex,3);d.name=n||t.attrName;a.applyToBufferAttribute(d);e.morphAttributes.position.push(d)},parseNormals:function(e){var r=e.MappingInformationType;var t=e.ReferenceInformationType;var a=e.Normals.a;var n=[];if(t==="IndexToDirect"){if("NormalIndex"in e){n=e.NormalIndex.a}else if("NormalsIndex"in e){n=e.NormalsIndex.a}}return{dataSize:3,buffer:a,indices:n,mappingType:r,referenceType:t}},parseUVs:function(e){var r=e.MappingInformationType;var t=e.ReferenceInformationType;var a=e.UV.a;var n=[];if(t==="IndexToDirect"){n=e.UVIndex.a}return{dataSize:2,buffer:a,indices:n,mappingType:r,referenceType:t}},parseVertexColors:function(e){var r=e.MappingInformationType;var t=e.ReferenceInformationType;var a=e.Colors.a;var n=[];if(t==="IndexToDirect"){n=e.ColorIndex.a}return{dataSize:4,buffer:a,indices:n,mappingType:r,referenceType:t}},parseMaterialIndices:function(e){var r=e.MappingInformationType;var t=e.ReferenceInformationType;if(r==="NoMappingInformation"){return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:t}}var a=e.Materials.a;var n=[];for(var i=0;i<a.length;++i){n.push(i)}return{dataSize:1,buffer:a,indices:n,mappingType:r,referenceType:t}},parseNurbsGeometry:function(e){if(THREE.NURBSCurve===undefined){console.error("THREE.FBXLoader: The loader relies on THREE.NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.");return new THREE.BufferGeometry}var r=parseInt(e.Order);if(isNaN(r)){console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id);return new THREE.BufferGeometry}var t=r-1;var a=e.KnotVector.a;var n=[];var i=e.Points.a;for(var o=0,s=i.length;o<s;o+=4){n.push((new THREE.Vector4).fromArray(i,o))}var u,f;if(e.Form==="Closed"){n.push(n[0])}else if(e.Form==="Periodic"){u=t;f=a.length-1-u;for(var o=0;o<t;++o){n.push(n[o])}}var l=new THREE.NURBSCurve(t,a,n,u,f);var c=l.getPoints(n.length*7);var p=new Float32Array(c.length*3);c.forEach(function(e,r){e.toArray(p,r*3)});var v=new THREE.BufferGeometry;v.addAttribute("position",new THREE.BufferAttribute(p,3));return v}};function o(){}o.prototype={constructor:o,parse:function(){var e=[];var r=this.parseClips();if(r!==undefined){for(var t in r){var a=r[t];var n=this.addClip(a);e.push(n)}}return e},parseClips:function(){if(e.Objects.AnimationCurve===undefined)return undefined;var r=this.parseAnimationCurveNodes();this.parseAnimationCurves(r);var t=this.parseAnimationLayers(r);var a=this.parseAnimStacks(t);return a},parseAnimationCurveNodes:function(){var r=e.Objects.AnimationCurveNode;var t=new Map;for(var a in r){var n=r[a];if(n.attrName.match(/S|R|T|DeformPercent/)!==null){var i={id:n.id,attr:n.attrName,curves:{}};t.set(i.id,i)}}return t},parseAnimationCurves:function(t){var a=e.Objects.AnimationCurve;for(var n in a){var i={id:a[n].id,times:a[n].KeyTime.a.map(d),values:a[n].KeyValueFloat.a};var o=r.get(i.id);if(o!==undefined){var s=o.parents[0].ID;var u=o.parents[0].relationship;if(u.match(/X/)){t.get(s).curves["x"]=i}else if(u.match(/Y/)){t.get(s).curves["y"]=i}else if(u.match(/Z/)){t.get(s).curves["z"]=i}else if(u.match(/d|DeformPercent/)&&t.has(s)){t.get(s).curves["morph"]=i}}}},parseAnimationLayers:function(a){var n=e.Objects.AnimationLayer;var i=new Map;for(var o in n){var s=[];var u=r.get(parseInt(o));if(u!==undefined){var f=u.children;f.forEach(function(n,i){if(a.has(n.ID)){var o=a.get(n.ID);if(o.curves.x!==undefined||o.curves.y!==undefined||o.curves.z!==undefined){if(s[i]===undefined){var u=r.get(n.ID).parents.filter(function(e){return e.relationship!==undefined})[0].ID;if(u!==undefined){var f=e.Objects.Model[u.toString()];var l={modelName:THREE.PropertyBinding.sanitizeNodeName(f.attrName),ID:f.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};t.traverse(function(e){if(e.ID===f.id){l.transform=e.matrix;if(e.userData.transformData)l.eulerOrder=e.userData.transformData.eulerOrder}});if(!l.transform)l.transform=new THREE.Matrix4;if("PreRotation"in f)l.preRotation=f.PreRotation.value;if("PostRotation"in f)l.postRotation=f.PostRotation.value;s[i]=l}}if(s[i])s[i][o.attr]=o}else if(o.curves.morph!==undefined){if(s[i]===undefined){var c=r.get(n.ID).parents.filter(function(e){return e.relationship!==undefined})[0].ID;var p=r.get(c).parents[0].ID;var v=r.get(p).parents[0].ID;var u=r.get(v).parents[0].ID;var f=e.Objects.Model[u];var l={modelName:THREE.PropertyBinding.sanitizeNodeName(f.attrName),morphName:e.Objects.Deformer[c].attrName};s[i]=l}s[i][o.attr]=o}}});i.set(parseInt(o),s)}}return i},parseAnimStacks:function(t){var a=e.Objects.AnimationStack;var n={};for(var i in a){var o=r.get(parseInt(i)).children;if(o.length>1){console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.")}var s=t.get(o[0].ID);n[i]={name:a[i].attrName,layer:s}}return n},addClip:function(e){var r=[];var t=this;e.layer.forEach(function(e){r=r.concat(t.generateTracks(e))});return new THREE.AnimationClip(e.name,-1,r)},generateTracks:function(e){var r=[];var t=new THREE.Vector3;var a=new THREE.Quaternion;var n=new THREE.Vector3;if(e.transform)e.transform.decompose(t,a,n);t=t.toArray();a=(new THREE.Euler).setFromQuaternion(a,e.eulerOrder).toArray();n=n.toArray();if(e.T!==undefined&&Object.keys(e.T.curves).length>0){var i=this.generateVectorTrack(e.modelName,e.T.curves,t,"position");if(i!==undefined)r.push(i)}if(e.R!==undefined&&Object.keys(e.R.curves).length>0){var o=this.generateRotationTrack(e.modelName,e.R.curves,a,e.preRotation,e.postRotation,e.eulerOrder);if(o!==undefined)r.push(o)}if(e.S!==undefined&&Object.keys(e.S.curves).length>0){var s=this.generateVectorTrack(e.modelName,e.S.curves,n,"scale");if(s!==undefined)r.push(s)}if(e.DeformPercent!==undefined){var u=this.generateMorphTrack(e);if(u!==undefined)r.push(u)}return r},generateVectorTrack:function(e,r,t,a){var n=this.getTimesForAllAxes(r);var i=this.getKeyframeTrackValues(n,r,t);return new THREE.VectorKeyframeTrack(e+"."+a,n,i)},generateRotationTrack:function(e,r,t,a,n,i){if(r.x!==undefined){this.interpolateRotations(r.x);r.x.values=r.x.values.map(THREE.Math.degToRad)}if(r.y!==undefined){this.interpolateRotations(r.y);r.y.values=r.y.values.map(THREE.Math.degToRad)}if(r.z!==undefined){this.interpolateRotations(r.z);r.z.values=r.z.values.map(THREE.Math.degToRad)}var o=this.getTimesForAllAxes(r);var s=this.getKeyframeTrackValues(o,r,t);if(a!==undefined){a=a.map(THREE.Math.degToRad);a.push(i);a=(new THREE.Euler).fromArray(a);a=(new THREE.Quaternion).setFromEuler(a)}if(n!==undefined){n=n.map(THREE.Math.degToRad);n.push(i);n=(new THREE.Euler).fromArray(n);n=(new THREE.Quaternion).setFromEuler(n).inverse()}var u=new THREE.Quaternion;var f=new THREE.Euler;var l=[];for(var c=0;c<s.length;c+=3){f.set(s[c],s[c+1],s[c+2],i);u.setFromEuler(f);if(a!==undefined)u.premultiply(a);if(n!==undefined)u.multiply(n);u.toArray(l,c/3*4)}return new THREE.QuaternionKeyframeTrack(e+".quaternion",o,l)},generateMorphTrack:function(e){var r=e.DeformPercent.curves.morph;var a=r.values.map(function(e){return e/100});var n=t.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new THREE.NumberKeyframeTrack(e.modelName+".morphTargetInfluences["+n+"]",r.times,a)},getTimesForAllAxes:function(e){var r=[];if(e.x!==undefined)r=r.concat(e.x.times);if(e.y!==undefined)r=r.concat(e.y.times);if(e.z!==undefined)r=r.concat(e.z.times);r=r.sort(function(e,r){return e-r}).filter(function(e,r,t){return t.indexOf(e)==r});return r},getKeyframeTrackValues:function(e,r,t){var a=t;var n=[];var i=-1;var o=-1;var s=-1;e.forEach(function(e){if(r.x)i=r.x.times.indexOf(e);if(r.y)o=r.y.times.indexOf(e);if(r.z)s=r.z.times.indexOf(e);if(i!==-1){var t=r.x.values[i];n.push(t);a[0]=t}else{n.push(a[0])}if(o!==-1){var u=r.y.values[o];n.push(u);a[1]=u}else{n.push(a[1])}if(s!==-1){var f=r.z.values[s];n.push(f);a[2]=f}else{n.push(a[2])}});return n},interpolateRotations:function(e){for(var r=1;r<e.values.length;r++){var t=e.values[r-1];var a=e.values[r]-t;var n=Math.abs(a);if(n>=180){var i=n/180;var o=a/i;var s=t+o;var u=e.times[r-1];var f=e.times[r]-u;var l=f/i;var c=u+l;var p=[];var v=[];while(c<e.times[r]){p.push(c);c+=l;v.push(s);s+=o}e.times=x(e.times,r,p);e.values=x(e.values,r,v)}}}};function s(){}s.prototype={constructor:s,getPrevNode:function(){return this.nodeStack[this.currentIndent-2]},getCurrentNode:function(){return this.nodeStack[this.currentIndent-1]},getCurrentProp:function(){return this.currentProp},pushStack:function(e){this.nodeStack.push(e);this.currentIndent+=1},popStack:function(){this.nodeStack.pop();this.currentIndent-=1},setCurrentProp:function(e,r){this.currentProp=e;this.currentPropName=r},parse:function(e){this.currentIndent=0;this.allNodes=new l;this.nodeStack=[];this.currentProp=[];this.currentPropName="";var r=this;var t=e.split(/[\r\n]+/);t.forEach(function(e,a){var n=e.match(/^[\s\t]*;/);var i=e.match(/^[\s\t]*$/);if(n||i)return;var o=e.match("^\\t{"+r.currentIndent+"}(\\w+):(.*){","");var s=e.match("^\\t{"+r.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)");var u=e.match("^\\t{"+(r.currentIndent-1)+"}}");if(o){r.parseNodeBegin(e,o)}else if(s){r.parseNodeProperty(e,s,t[++a])}else if(u){r.popStack()}else if(e.match(/^[^\s\t}]/)){r.parseNodePropertyContinued(e)}});return this.allNodes},parseNodeBegin:function(e,r){var t=r[1].trim().replace(/^"/,"").replace(/"$/,"");var a=r[2].split(",").map(function(e){return e.trim().replace(/^"/,"").replace(/"$/,"")});var n={name:t};var i=this.parseNodeAttr(a);var o=this.getCurrentNode();if(this.currentIndent===0){this.allNodes.add(t,n)}else{if(t in o){if(t==="PoseNode"){o.PoseNode.push(n)}else if(o[t].id!==undefined){o[t]={};o[t][o[t].id]=o[t]}if(i.id!=="")o[t][i.id]=n}else if(typeof i.id==="number"){o[t]={};o[t][i.id]=n}else if(t!=="Properties70"){if(t==="PoseNode")o[t]=[n];else o[t]=n}}if(typeof i.id==="number")n.id=i.id;if(i.name!=="")n.attrName=i.name;if(i.type!=="")n.attrType=i.type;this.pushStack(n)},parseNodeAttr:function(e){var r=e[0];if(e[0]!==""){r=parseInt(e[0]);if(isNaN(r)){r=e[0]}}var t="",a="";if(e.length>1){t=e[1].replace(/^(\w+)::/,"");a=e[2]}return{id:r,name:t,type:a}},parseNodeProperty:function(e,r,t){var a=r[1].replace(/^"/,"").replace(/"$/,"").trim();var n=r[2].replace(/^"/,"").replace(/"$/,"").trim();if(a==="Content"&&n===","){n=t.replace(/"/g,"").replace(/,$/,"").trim()}var i=this.getCurrentNode();var o=i.name;if(o==="Properties70"){this.parseNodeSpecialProperty(e,a,n);return}if(a==="C"){var s=n.split(",").slice(1);var u=parseInt(s[0]);var f=parseInt(s[1]);var l=n.split(",").slice(3);l=l.map(function(e){return e.trim().replace(/^"/,"")});a="connections";n=[u,f];I(n,l);if(i[a]===undefined){i[a]=[]}}if(a==="Node")i.id=n;if(a in i&&Array.isArray(i[a])){i[a].push(n)}else{if(a!=="a")i[a]=n;else i.a=n}this.setCurrentProp(i,a);if(a==="a"&&n.slice(-1)!==","){i.a=R(n)}},parseNodePropertyContinued:function(e){var r=this.getCurrentNode();r.a+=e;if(e.slice(-1)!==","){r.a=R(r.a)}},parseNodeSpecialProperty:function(e,r,t){var a=t.split('",').map(function(e){return e.trim().replace(/^\"/,"").replace(/\s/,"_")});var n=a[0];var i=a[1];var o=a[2];var s=a[3];var u=a[4];switch(i){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":u=parseFloat(u);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":u=R(u);break}this.getPrevNode()[n]={type:i,type2:o,flag:s,value:u};this.setCurrentProp(this.getPrevNode(),n)}};function u(){}u.prototype={constructor:u,parse:function(e){var r=new f(e);r.skip(23);var t=r.getUint32();console.log("THREE.FBXLoader: FBX binary version: "+t);var a=new l;while(!this.endOfContent(r)){var n=this.parseNode(r,t);if(n!==null)a.add(n.name,n)}return a},endOfContent:function(e){if(e.size()%16===0){return(e.getOffset()+160+16&~15)>=e.size()}else{return e.getOffset()+160+16>=e.size()}},parseNode:function(e,r){var t={};var a=r>=7500?e.getUint64():e.getUint32();var n=r>=7500?e.getUint64():e.getUint32();var i=r>=7500?e.getUint64():e.getUint32();var o=e.getUint8();var s=e.getString(o);if(a===0)return null;var u=[];for(var f=0;f<n;f++){u.push(this.parseProperty(e))}var l=u.length>0?u[0]:"";var c=u.length>1?u[1]:"";var p=u.length>2?u[2]:"";t.singleProperty=n===1&&e.getOffset()===a?true:false;while(a>e.getOffset()){var v=this.parseNode(e,r);if(v!==null)this.parseSubNode(s,t,v)}t.propertyList=u;if(typeof l==="number")t.id=l;if(c!=="")t.attrName=c;if(p!=="")t.attrType=p;if(s!=="")t.name=s;return t},parseSubNode:function(e,r,t){if(t.singleProperty===true){var a=t.propertyList[0];if(Array.isArray(a)){r[t.name]=t;t.a=a}else{r[t.name]=a}}else if(e==="Connections"&&t.name==="C"){var n=[];t.propertyList.forEach(function(e,r){if(r!==0)n.push(e)});if(r.connections===undefined){r.connections=[]}r.connections.push(n)}else if(t.name==="Properties70"){var i=Object.keys(t);i.forEach(function(e){r[e]=t[e]})}else if(e==="Properties70"&&t.name==="P"){var o=t.propertyList[0];var s=t.propertyList[1];var u=t.propertyList[2];var f=t.propertyList[3];var l;if(o.indexOf("Lcl ")===0)o=o.replace("Lcl ","Lcl_");if(s.indexOf("Lcl ")===0)s=s.replace("Lcl ","Lcl_");if(s==="Color"||s==="ColorRGB"||s==="Vector"||s==="Vector3D"||s.indexOf("Lcl_")===0){l=[t.propertyList[4],t.propertyList[5],t.propertyList[6]]}else{l=t.propertyList[4]}r[o]={type:s,type2:u,flag:f,value:l}}else if(r[t.name]===undefined){if(typeof t.id==="number"){r[t.name]={};r[t.name][t.id]=t}else{r[t.name]=t}}else{if(t.name==="PoseNode"){if(!Array.isArray(r[t.name])){r[t.name]=[r[t.name]]}r[t.name].push(t)}else if(r[t.name][t.id]===undefined){r[t.name][t.id]=t}}},parseProperty:function(e){var r=e.getString(1);switch(r){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":var t=e.getUint32();return e.getArrayBuffer(t);case"S":var t=e.getUint32();return e.getString(t);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":var a=e.getUint32();var n=e.getUint32();var i=e.getUint32();if(n===0){switch(r){case"b":case"c":return e.getBooleanArray(a);case"d":return e.getFloat64Array(a);case"f":return e.getFloat32Array(a);case"i":return e.getInt32Array(a);case"l":return e.getInt64Array(a)}}if(typeof Zlib==="undefined"){console.error("THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js")}var o=new Zlib.Inflate(new Uint8Array(e.getArrayBuffer(i)));var s=new f(o.decompress().buffer);switch(r){case"b":case"c":return s.getBooleanArray(a);case"d":return s.getFloat64Array(a);case"f":return s.getFloat32Array(a);case"i":return s.getInt32Array(a);case"l":return s.getInt64Array(a)}default:throw new Error("THREE.FBXLoader: Unknown property type "+r)}}};function f(e,r){this.dv=new DataView(e);this.offset=0;this.littleEndian=r!==undefined?r:true}f.prototype={constructor:f,getOffset:function(){return this.offset},size:function(){return this.dv.buffer.byteLength},skip:function(e){this.offset+=e},getBoolean:function(){return(this.getUint8()&1)===1},getBooleanArray:function(e){var r=[];for(var t=0;t<e;t++){r.push(this.getBoolean())}return r},getUint8:function(){var e=this.dv.getUint8(this.offset);this.offset+=1;return e},getInt16:function(){var e=this.dv.getInt16(this.offset,this.littleEndian);this.offset+=2;return e},getInt32:function(){var e=this.dv.getInt32(this.offset,this.littleEndian);this.offset+=4;return e},getInt32Array:function(e){var r=[];for(var t=0;t<e;t++){r.push(this.getInt32())}return r},getUint32:function(){var e=this.dv.getUint32(this.offset,this.littleEndian);this.offset+=4;return e},getInt64:function(){var e,r;if(this.littleEndian){e=this.getUint32();r=this.getUint32()}else{r=this.getUint32();e=this.getUint32()}if(r&2147483648){r=~r&4294967295;e=~e&4294967295;if(e===4294967295)r=r+1&4294967295;e=e+1&4294967295;return-(r*4294967296+e)}return r*4294967296+e},getInt64Array:function(e){var r=[];for(var t=0;t<e;t++){r.push(this.getInt64())}return r},getUint64:function(){var e,r;if(this.littleEndian){e=this.getUint32();r=this.getUint32()}else{r=this.getUint32();e=this.getUint32()}return r*4294967296+e},getFloat32:function(){var e=this.dv.getFloat32(this.offset,this.littleEndian);this.offset+=4;return e},getFloat32Array:function(e){var r=[];for(var t=0;t<e;t++){r.push(this.getFloat32())}return r},getFloat64:function(){var e=this.dv.getFloat64(this.offset,this.littleEndian);this.offset+=8;return e},getFloat64Array:function(e){var r=[];for(var t=0;t<e;t++){r.push(this.getFloat64())}return r},getArrayBuffer:function(e){var r=this.dv.buffer.slice(this.offset,this.offset+e);this.offset+=e;return r},getString:function(e){var r=[];for(var t=0;t<e;t++){r[t]=this.getUint8()}var a=r.indexOf(0);if(a>=0)r=r.slice(0,a);return THREE.LoaderUtils.decodeText(new Uint8Array(r))}};function l(){}l.prototype={constructor:l,add:function(e,r){this[e]=r}};function c(e){var r="Kaydara FBX Binary  \0";return e.byteLength>=r.length&&r===w(e,0,r.length)}function p(e){var r=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"];var t=0;function a(r){var a=e[r-1];e=e.slice(t+r);t++;return a}for(var n=0;n<r.length;++n){var i=a(1);if(i===r[n]){return false}}return true}function v(e){var r=/FBXVersion: (\d+)/;var t=e.match(r);if(t){var a=parseInt(t[1]);return a}throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function d(e){return e/46186158e3}var h=[];function m(e,r,t,a){var n;switch(a.mappingType){case"ByPolygonVertex":n=e;break;case"ByPolygon":n=r;break;case"ByVertice":n=t;break;case"AllSame":n=a.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+a.mappingType)}if(a.referenceType==="IndexToDirect")n=a.indices[n];var i=n*a.dataSize;var o=i+a.dataSize;return b(h,a.buffer,i,o)}var g=new THREE.Euler;var E=new THREE.Vector3;function y(e){var r=new THREE.Matrix4;var t=new THREE.Matrix4;var a=new THREE.Matrix4;var n=new THREE.Matrix4;var i=new THREE.Matrix4;var o=new THREE.Matrix4;var s=new THREE.Matrix4;var u=new THREE.Matrix4;var f=new THREE.Matrix4;var l=new THREE.Matrix4;var c=new THREE.Matrix4;var p=e.inheritType?e.inheritType:0;if(e.translation)r.setPosition(E.fromArray(e.translation));if(e.preRotation){var v=e.preRotation.map(THREE.Math.degToRad);v.push(e.eulerOrder);t.makeRotationFromEuler(g.fromArray(v))}if(e.rotation){var v=e.rotation.map(THREE.Math.degToRad);v.push(e.eulerOrder);a.makeRotationFromEuler(g.fromArray(v))}if(e.postRotation){var v=e.postRotation.map(THREE.Math.degToRad);v.push(e.eulerOrder);n.makeRotationFromEuler(g.fromArray(v))}if(e.scale)i.scale(E.fromArray(e.scale));if(e.scalingOffset)s.setPosition(E.fromArray(e.scalingOffset));if(e.scalingPivot)o.setPosition(E.fromArray(e.scalingPivot));if(e.rotationOffset)u.setPosition(E.fromArray(e.rotationOffset));if(e.rotationPivot)f.setPosition(E.fromArray(e.rotationPivot));if(e.parentMatrixWorld)l=e.parentMatrixWorld;var d=t.multiply(a).multiply(n);var h=new THREE.Matrix4;l.extractRotation(h);var m=new THREE.Matrix4;var y;var T;var R;m.copyPosition(l);R=m.getInverse(m).multiply(l);T=h.getInverse(h).multiply(R);y=i;var w;if(p===0){w=h.multiply(d).multiply(T).multiply(y)}else if(p===1){w=h.multiply(T).multiply(d).multiply(y)}else{var I=(new THREE.Matrix4).copy(i);var b=T.multiply(I.getInverse(I));w=h.multiply(d).multiply(b).multiply(y)}var x=r.multiply(u).multiply(f).multiply(t).multiply(a).multiply(n).multiply(f.getInverse(f)).multiply(s).multiply(o).multiply(i).multiply(o.getInverse(o));var H=(new THREE.Matrix4).copyPosition(x);var A=l.multiply(H);c.copyPosition(A);x=c.multiply(w);return x}function T(e){e=e||0;var r=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];if(e===6){console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.");return r[0]}return r[e]}function R(e){var r=e.split(",").map(function(e){return parseFloat(e)});return r}function w(e,r,t){if(r===undefined)r=0;if(t===undefined)t=e.byteLength;return THREE.LoaderUtils.decodeText(new Uint8Array(e,r,t))}function I(e,r){for(var t=0,a=e.length,n=r.length;t<n;t++,a++){e[a]=r[t]}}function b(e,r,t,a){for(var n=t,i=0;n<a;n++,i++){e[i]=r[n]}return e}function x(e,r,t){return e.slice(0,r).concat(t).concat(e.slice(r))}return a}();
//# sourceMappingURL=FBXLoader.min.js.map