var WEBGL_CONSTANTS={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123,FLOAT:5126,UNSIGNED_INT:5125,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,REPEAT:10497};var THREE_TO_WEBGL={};THREE_TO_WEBGL[THREE.NearestFilter]=WEBGL_CONSTANTS.NEAREST;THREE_TO_WEBGL[THREE.NearestMipMapNearestFilter]=WEBGL_CONSTANTS.NEAREST_MIPMAP_NEAREST;THREE_TO_WEBGL[THREE.NearestMipMapLinearFilter]=WEBGL_CONSTANTS.NEAREST_MIPMAP_LINEAR;THREE_TO_WEBGL[THREE.LinearFilter]=WEBGL_CONSTANTS.LINEAR;THREE_TO_WEBGL[THREE.LinearMipMapNearestFilter]=WEBGL_CONSTANTS.LINEAR_MIPMAP_NEAREST;THREE_TO_WEBGL[THREE.LinearMipMapLinearFilter]=WEBGL_CONSTANTS.LINEAR_MIPMAP_LINEAR;THREE_TO_WEBGL[THREE.ClampToEdgeWrapping]=WEBGL_CONSTANTS.CLAMP_TO_EDGE;THREE_TO_WEBGL[THREE.RepeatWrapping]=WEBGL_CONSTANTS.REPEAT;THREE_TO_WEBGL[THREE.MirroredRepeatWrapping]=WEBGL_CONSTANTS.MIRRORED_REPEAT;var PATH_PROPERTIES={scale:"scale",position:"translation",quaternion:"rotation",morphTargetInfluences:"weights"};THREE.GLTFExporter=function(){};THREE.GLTFExporter.prototype={constructor:THREE.GLTFExporter,parse:function(e,r,t){var a={binary:false,trs:false,onlyVisible:true,truncateDrawRange:true,embedImages:true,animations:[],forceIndices:false,forcePowerOfTwoTextures:false,includeCustomExtensions:false};t=Object.assign({},a,t);if(t.animations.length>0){t.trs=true}var n={asset:{version:"2.0",generator:"THREE.GLTFExporter"}};var i=0;var s=[];var o=[];var l=new Map;var f=[];var u={};var E={meshes:new Map,attributes:new Map,attributesNormalized:new Map,materials:new Map,textures:new Map,images:new Map};var T;var c=new Map;var p=0;function h(e){if(!c.has(e))c.set(e,p++);return c.get(e)}function m(e,r){return e.length===r.length&&e.every(function(e,t){return e===r[t]})}function g(e){if(window.TextEncoder!==undefined){return(new TextEncoder).encode(e).buffer}var r=new Uint8Array(new ArrayBuffer(e.length));for(var t=0,a=e.length;t<a;t++){var n=e.charCodeAt(t);r[t]=n>255?32:n}return r.buffer}function v(e,r,t){var a={min:new Array(e.itemSize).fill(Number.POSITIVE_INFINITY),max:new Array(e.itemSize).fill(Number.NEGATIVE_INFINITY)};for(var n=r;n<r+t;n++){for(var i=0;i<e.itemSize;i++){var s=e.array[n*e.itemSize+i];a.min[i]=Math.min(a.min[i],s);a.max[i]=Math.max(a.max[i],s)}}return a}function d(e){return THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height)}function R(e){if(E.attributesNormalized.has(e)){return false}var r=new THREE.Vector3;for(var t=0,a=e.count;t<a;t++){if(Math.abs(r.fromArray(e.array,t*3).length()-1)>5e-4)return false}return true}function N(e){if(E.attributesNormalized.has(e)){return E.attributesNormalized.get(e)}var r=e.clone();var t=new THREE.Vector3;for(var a=0,n=r.count;a<n;a++){t.fromArray(r.array,a*3);if(t.x===0&&t.y===0&&t.z===0){t.setX(1)}else{t.normalize()}t.toArray(r.array,a*3)}E.attributesNormalized.set(e,r);return r}function S(e){return Math.ceil(e/4)*4}function y(e,r){r=r||0;var t=S(e.byteLength);if(t!==e.byteLength){var a=new Uint8Array(t);a.set(new Uint8Array(e));if(r!==0){for(var n=e.byteLength;n<t;n++){a[n]=r}}return a.buffer}return e}function L(e,r){if(Object.keys(e.userData).length===0){return}try{var a=JSON.parse(JSON.stringify(e.userData));if(t.includeCustomExtensions&&a.gltfExtensions){if(r.extensions===undefined){r.extensions={}}for(var n in a.gltfExtensions){r.extensions[n]=a.gltfExtensions[n];u[n]=true}delete a.gltfExtensions}if(Object.keys(a).length>0){r.extras=a}}catch(r){console.warn("THREE.GLTFExporter: userData of '"+e.name+"' "+"won't be serialized because of JSON.stringify error - "+r.message)}}function A(e,r){var t=false;var a={};if(r.offset.x!==0||r.offset.y!==0){a.offset=r.offset.toArray();t=true}if(r.rotation!==0){a.rotation=r.rotation;t=true}if(r.repeat.x!==1||r.repeat.y!==1){a.scale=r.repeat.toArray();t=true}if(t){e.extensions=e.extensions||{};e.extensions["KHR_texture_transform"]=a;u["KHR_texture_transform"]=true}}function _(e){if(!n.buffers){n.buffers=[{byteLength:0}]}s.push(e);return 0}function b(e,r,t,a,s){if(!n.bufferViews){n.bufferViews=[]}var o;if(r===WEBGL_CONSTANTS.UNSIGNED_BYTE){o=1}else if(r===WEBGL_CONSTANTS.UNSIGNED_SHORT){o=2}else{o=4}var l=S(a*e.itemSize*o);var f=new DataView(new ArrayBuffer(l));var u=0;for(var E=t;E<t+a;E++){for(var T=0;T<e.itemSize;T++){var c=e.array[E*e.itemSize+T];if(r===WEBGL_CONSTANTS.FLOAT){f.setFloat32(u,c,true)}else if(r===WEBGL_CONSTANTS.UNSIGNED_INT){f.setUint32(u,c,true)}else if(r===WEBGL_CONSTANTS.UNSIGNED_SHORT){f.setUint16(u,c,true)}else if(r===WEBGL_CONSTANTS.UNSIGNED_BYTE){f.setUint8(u,c)}u+=o}}var p={buffer:_(f.buffer),byteOffset:i,byteLength:l};if(s!==undefined)p.target=s;if(s===WEBGL_CONSTANTS.ARRAY_BUFFER){p.byteStride=e.itemSize*o}i+=l;n.bufferViews.push(p);var h={id:n.bufferViews.length-1,byteLength:0};return h}function w(e){if(!n.bufferViews){n.bufferViews=[]}return new Promise(function(r){var t=new window.FileReader;t.readAsArrayBuffer(e);t.onloadend=function(){var e=y(t.result);var a={buffer:_(e),byteOffset:i,byteLength:e.byteLength};i+=e.byteLength;n.bufferViews.push(a);r(n.bufferViews.length-1)}})}function I(e,r,a,i){var s={1:"SCALAR",2:"VEC2",3:"VEC3",4:"VEC4",16:"MAT4"};var o;if(e.array.constructor===Float32Array){o=WEBGL_CONSTANTS.FLOAT}else if(e.array.constructor===Uint32Array){o=WEBGL_CONSTANTS.UNSIGNED_INT}else if(e.array.constructor===Uint16Array){o=WEBGL_CONSTANTS.UNSIGNED_SHORT}else if(e.array.constructor===Uint8Array){o=WEBGL_CONSTANTS.UNSIGNED_BYTE}else{throw new Error("THREE.GLTFExporter: Unsupported bufferAttribute component type.")}if(a===undefined)a=0;if(i===undefined)i=e.count;if(t.truncateDrawRange&&r!==undefined&&r.index===null){var l=a+i;var f=r.drawRange.count===Infinity?e.count:r.drawRange.start+r.drawRange.count;a=Math.max(a,r.drawRange.start);i=Math.min(l,f)-a;if(i<0)i=0}if(i===0){return null}var u=v(e,a,i);var E;if(r!==undefined){E=e===r.index?WEBGL_CONSTANTS.ELEMENT_ARRAY_BUFFER:WEBGL_CONSTANTS.ARRAY_BUFFER}var T=b(e,o,a,i,E);var c={bufferView:T.id,byteOffset:T.byteOffset,componentType:o,count:i,max:u.max,min:u.min,type:s[e.itemSize]};if(!n.accessors){n.accessors=[]}n.accessors.push(c);return n.accessors.length-1}function M(e,r,a){if(!E.images.has(e)){E.images.set(e,{})}var i=E.images.get(e);var s=r===THREE.RGBAFormat?"image/png":"image/jpeg";var l=s+":flipY/"+a.toString();if(i[l]!==undefined){return i[l]}if(!n.images){n.images=[]}var f={mimeType:s};if(t.embedImages){var u=T=T||document.createElement("canvas");u.width=e.width;u.height=e.height;if(t.forcePowerOfTwoTextures&&!d(e)){console.warn("GLTFExporter: Resized non-power-of-two image.",e);u.width=THREE.Math.floorPowerOfTwo(u.width);u.height=THREE.Math.floorPowerOfTwo(u.height)}var c=u.getContext("2d");if(a===true){c.translate(0,u.height);c.scale(1,-1)}c.drawImage(e,0,0,u.width,u.height);if(t.binary===true){o.push(new Promise(function(e){u.toBlob(function(r){w(r).then(function(r){f.bufferView=r;e()})},s)}))}else{f.uri=u.toDataURL(s)}}else{f.uri=e.src}n.images.push(f);var p=n.images.length-1;i[l]=p;return p}function x(e){if(!n.samplers){n.samplers=[]}var r={magFilter:THREE_TO_WEBGL[e.magFilter],minFilter:THREE_TO_WEBGL[e.minFilter],wrapS:THREE_TO_WEBGL[e.wrapS],wrapT:THREE_TO_WEBGL[e.wrapT]};n.samplers.push(r);return n.samplers.length-1}function O(e){if(E.textures.has(e)){return E.textures.get(e)}if(!n.textures){n.textures=[]}var r={sampler:x(e),source:M(e.image,e.format,e.flipY)};n.textures.push(r);var t=n.textures.length-1;E.textures.set(e,t);return t}function G(e){if(E.materials.has(e)){return E.materials.get(e)}if(!n.materials){n.materials=[]}if(e.isShaderMaterial){console.warn("GLTFExporter: THREE.ShaderMaterial not supported.");return null}var r={pbrMetallicRoughness:{}};if(e.isMeshBasicMaterial){r.extensions={KHR_materials_unlit:{}};u["KHR_materials_unlit"]=true}else if(!e.isMeshStandardMaterial){console.warn("GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.")}var t=e.color.toArray().concat([e.opacity]);if(!m(t,[1,1,1,1])){r.pbrMetallicRoughness.baseColorFactor=t}if(e.isMeshStandardMaterial){r.pbrMetallicRoughness.metallicFactor=e.metalness;r.pbrMetallicRoughness.roughnessFactor=e.roughness}else if(e.isMeshBasicMaterial){r.pbrMetallicRoughness.metallicFactor=0;r.pbrMetallicRoughness.roughnessFactor=.9}else{r.pbrMetallicRoughness.metallicFactor=.5;r.pbrMetallicRoughness.roughnessFactor=.5}if(e.metalnessMap||e.roughnessMap){if(e.metalnessMap===e.roughnessMap){var a={index:O(e.metalnessMap)};A(a,e.metalnessMap);r.pbrMetallicRoughness.metallicRoughnessTexture=a}else{console.warn("THREE.GLTFExporter: Ignoring metalnessMap and roughnessMap because they are not the same Texture.")}}if(e.map){var i={index:O(e.map)};A(i,e.map);r.pbrMetallicRoughness.baseColorTexture=i}if(e.isMeshBasicMaterial||e.isLineBasicMaterial||e.isPointsMaterial){}else{var s=e.emissive.clone().multiplyScalar(e.emissiveIntensity).toArray();if(!m(s,[0,0,0])){r.emissiveFactor=s}if(e.emissiveMap){var o={index:O(e.emissiveMap)};A(o,e.emissiveMap);r.emissiveTexture=o}}if(e.normalMap){var l={index:O(e.normalMap)};if(e.normalScale.x!==-1){if(e.normalScale.x!==e.normalScale.y){console.warn("THREE.GLTFExporter: Normal scale components are different, ignoring Y and exporting X.")}l.scale=e.normalScale.x}A(l,e.normalMap);r.normalTexture=l}if(e.aoMap){var f={index:O(e.aoMap),texCoord:1};if(e.aoMapIntensity!==1){f.strength=e.aoMapIntensity}A(f,e.aoMap);r.occlusionTexture=f}if(e.transparent||e.alphaTest>0){r.alphaMode=e.opacity<1?"BLEND":"MASK";if(e.alphaTest>0&&e.alphaTest!==.5){r.alphaCutoff=e.alphaTest}}if(e.side===THREE.DoubleSide){r.doubleSided=true}if(e.name!==""){r.name=e.name}L(e,r);n.materials.push(r);var T=n.materials.length-1;E.materials.set(e,T);return T}function B(e){var r=e.geometry.uuid+":"+e.material.uuid;if(E.meshes.has(r)){return E.meshes.get(r)}var a=e.geometry;var i;if(e.isLineSegments){i=WEBGL_CONSTANTS.LINES}else if(e.isLineLoop){i=WEBGL_CONSTANTS.LINE_LOOP}else if(e.isLine){i=WEBGL_CONSTANTS.LINE_STRIP}else if(e.isPoints){i=WEBGL_CONSTANTS.POINTS}else{if(!a.isBufferGeometry){console.warn("GLTFExporter: Exporting THREE.Geometry will increase file size. Use THREE.BufferGeometry instead.");var s=new THREE.BufferGeometry;s.fromGeometry(a);a=s}if(e.drawMode===THREE.TriangleFanDrawMode){console.warn("GLTFExporter: TriangleFanDrawMode and wireframe incompatible.");i=WEBGL_CONSTANTS.TRIANGLE_FAN}else if(e.drawMode===THREE.TriangleStripDrawMode){i=e.material.wireframe?WEBGL_CONSTANTS.LINE_STRIP:WEBGL_CONSTANTS.TRIANGLE_STRIP}else{i=e.material.wireframe?WEBGL_CONSTANTS.LINES:WEBGL_CONSTANTS.TRIANGLES}}var o={};var l={};var f=[];var u=[];var T={uv:"TEXCOORD_0",uv2:"TEXCOORD_1",color:"COLOR_0",skinWeight:"WEIGHTS_0",skinIndex:"JOINTS_0"};var c=a.getAttribute("normal");if(c!==undefined&&!R(c)){console.warn("THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one.");a.addAttribute("normal",N(c))}var p=null;for(var m in a.attributes){if(m.substr(0,5)==="morph")continue;var g=a.attributes[m];m=T[m]||m.toUpperCase();var v=/^(POSITION|NORMAL|TANGENT|TEXCOORD_\d+|COLOR_\d+|JOINTS_\d+|WEIGHTS_\d+)$/;if(!v.test(m)){m="_"+m}if(E.attributes.has(h(g))){l[m]=E.attributes.get(h(g));continue}p=null;var d=g.array;if(m==="JOINTS_0"&&!(d instanceof Uint16Array)&&!(d instanceof Uint8Array)){console.warn('GLTFExporter: Attribute "skinIndex" converted to type UNSIGNED_SHORT.');p=new THREE.BufferAttribute(new Uint16Array(d),g.itemSize,g.normalized)}var S=I(p||g,a);if(S!==null){l[m]=S;E.attributes.set(h(g),S)}}if(c!==undefined)a.addAttribute("normal",c);if(Object.keys(l).length===0){return null}if(e.morphTargetInfluences!==undefined&&e.morphTargetInfluences.length>0){var y=[];var A=[];var _={};if(e.morphTargetDictionary!==undefined){for(var b in e.morphTargetDictionary){_[e.morphTargetDictionary[b]]=b}}for(var w=0;w<e.morphTargetInfluences.length;++w){var M={};var x=false;for(var m in a.morphAttributes){if(m!=="position"&&m!=="normal"){if(!x){console.warn("GLTFExporter: Only POSITION and NORMAL morph are supported.");x=true}continue}var g=a.morphAttributes[m][w];var O=m.toUpperCase();var B=a.attributes[m];if(E.attributes.has(h(g))){M[O]=E.attributes.get(h(g));continue}var H=g.clone();for(var F=0,C=g.count;F<C;F++){H.setXYZ(F,g.getX(F)-B.getX(F),g.getY(F)-B.getY(F),g.getZ(F)-B.getZ(F))}M[O]=I(H,a);E.attributes.set(h(B),M[O])}u.push(M);y.push(e.morphTargetInfluences[w]);if(e.morphTargetDictionary!==undefined)A.push(_[w])}o.weights=y;if(A.length>0){o.extras={};o.extras.targetNames=A}}var P=t.forceIndices;var W=Array.isArray(e.material);if(W&&a.groups.length===0)return null;if(!P&&a.index===null&&W){console.warn("THREE.GLTFExporter: Creating index for non-indexed multi-material mesh.");P=true}var U=false;if(a.index===null&&P){var D=[];for(var w=0,k=a.attributes.position.count;w<k;w++){D[w]=w}a.setIndex(D);U=true}var z=W?e.material:[e.material];var V=W?a.groups:[{materialIndex:0,start:undefined,count:undefined}];for(var w=0,k=V.length;w<k;w++){var Y={mode:i,attributes:l};L(a,Y);if(u.length>0)Y.targets=u;if(a.index!==null){var r=h(a.index);if(V[w].start!==undefined||V[w].count!==undefined){r+=":"+V[w].start+":"+V[w].count}if(E.attributes.has(r)){Y.indices=E.attributes.get(r)}else{Y.indices=I(a.index,a,V[w].start,V[w].count);E.attributes.set(r,Y.indices)}if(Y.indices===null)delete Y.indices}var K=G(z[V[w].materialIndex]);if(K!==null){Y.material=K}f.push(Y)}if(U){a.setIndex(null)}o.primitives=f;if(!n.meshes){n.meshes=[]}n.meshes.push(o);var j=n.meshes.length-1;E.meshes.set(r,j);return j}function H(e){if(!n.cameras){n.cameras=[]}var r=e.isOrthographicCamera;var t={type:r?"orthographic":"perspective"};if(r){t.orthographic={xmag:e.right*2,ymag:e.top*2,zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near}}else{t.perspective={aspectRatio:e.aspect,yfov:THREE.Math.degToRad(e.fov),zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near}}if(e.name!==""){t.name=e.type}n.cameras.push(t);return n.cameras.length-1}function F(e,r){if(!n.animations){n.animations=[]}e=THREE.GLTFExporter.Utils.mergeMorphTargetTracks(e.clone(),r);var t=e.tracks;var a=[];var i=[];for(var s=0;s<t.length;++s){var o=t[s];var f=THREE.PropertyBinding.parseTrackName(o.name);var u=THREE.PropertyBinding.findNode(r,f.nodeName);var E=PATH_PROPERTIES[f.propertyName];if(f.objectName==="bones"){if(u.isSkinnedMesh===true){u=u.skeleton.getBoneByName(f.objectIndex)}else{u=undefined}}if(!u||!E){console.warn('THREE.GLTFExporter: Could not export animation track "%s".',o.name);return null}var T=1;var c=o.values.length/o.times.length;if(E===PATH_PROPERTIES.morphTargetInfluences){c/=u.morphTargetInfluences.length}var p;if(o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline===true){p="CUBICSPLINE";c/=3}else if(o.getInterpolation()===THREE.InterpolateDiscrete){p="STEP"}else{p="LINEAR"}i.push({input:I(new THREE.BufferAttribute(o.times,T)),output:I(new THREE.BufferAttribute(o.values,c)),interpolation:p});a.push({sampler:i.length-1,target:{node:l.get(u),path:E}})}n.animations.push({name:e.name||"clip_"+n.animations.length,samplers:i,channels:a});return n.animations.length-1}function C(e){var r=n.nodes[l.get(e)];var t=e.skeleton;var a=e.skeleton.bones[0];if(a===undefined)return null;var i=[];var s=new Float32Array(t.bones.length*16);for(var o=0;o<t.bones.length;++o){i.push(l.get(t.bones[o]));t.boneInverses[o].toArray(s,o*16)}if(n.skins===undefined){n.skins=[]}n.skins.push({inverseBindMatrices:I(new THREE.BufferAttribute(s,16)),joints:i,skeleton:l.get(a)});var f=r.skin=n.skins.length-1;return f}function P(e){var r={};if(e.name)r.name=e.name;r.color=e.color.toArray();r.intensity=e.intensity;if(e.isDirectionalLight){r.type="directional"}else if(e.isPointLight){r.type="point";if(e.distance>0)r.range=e.distance}else if(e.isSpotLight){r.type="spot";if(e.distance>0)r.range=e.distance;r.spot={};r.spot.innerConeAngle=(e.penumbra-1)*e.angle*-1;r.spot.outerConeAngle=e.angle}if(e.decay!==undefined&&e.decay!==2){console.warn("THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, "+"and expects light.decay=2.")}if(e.target&&(e.target.parent!==e||e.target.position.x!==0||e.target.position.y!==0||e.target.position.z!==-1)){console.warn("THREE.GLTFExporter: Light direction may be lost. For best results, "+"make light.target a child of the light with position 0,0,-1.")}var t=n.extensions["KHR_lights_punctual"].lights;t.push(r);return t.length-1}function W(e){if(!n.nodes){n.nodes=[]}var r={};if(t.trs){var a=e.quaternion.toArray();var i=e.position.toArray();var s=e.scale.toArray();if(!m(a,[0,0,0,1])){r.rotation=a}if(!m(i,[0,0,0])){r.translation=i}if(!m(s,[1,1,1])){r.scale=s}}else{e.updateMatrix();if(!m(e.matrix.elements,[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])){r.matrix=e.matrix.elements}}if(e.name!==""){r.name=String(e.name)}L(e,r);if(e.isMesh||e.isLine||e.isPoints){var o=B(e);if(o!==null){r.mesh=o}}else if(e.isCamera){r.camera=H(e)}else if(e.isDirectionalLight||e.isPointLight||e.isSpotLight){if(!u["KHR_lights_punctual"]){n.extensions=n.extensions||{};n.extensions["KHR_lights_punctual"]={lights:[]};u["KHR_lights_punctual"]=true}r.extensions=r.extensions||{};r.extensions["KHR_lights_punctual"]={light:P(e)}}else if(e.isLight){console.warn("THREE.GLTFExporter: Only directional, point, and spot lights are supported.",e);return null}if(e.isSkinnedMesh){f.push(e)}if(e.children.length>0){var E=[];for(var T=0,c=e.children.length;T<c;T++){var p=e.children[T];if(p.visible||t.onlyVisible===false){var h=W(p);if(h!==null){E.push(h)}}}if(E.length>0){r.children=E}}n.nodes.push(r);var g=n.nodes.length-1;l.set(e,g);return g}function U(e){if(!n.scenes){n.scenes=[];n.scene=0}var r={nodes:[]};if(e.name!==""){r.name=e.name}if(e.userData&&Object.keys(e.userData).length>0){r.extras=L(e)}n.scenes.push(r);var a=[];for(var i=0,s=e.children.length;i<s;i++){var o=e.children[i];if(o.visible||t.onlyVisible===false){var l=W(o);if(l!==null){a.push(l)}}}if(a.length>0){r.nodes=a}L(e,r)}function D(e){var r=new THREE.Scene;r.name="AuxScene";for(var t=0;t<e.length;t++){r.children.push(e[t])}U(r)}function k(e){e=e instanceof Array?e:[e];var r=[];for(var a=0;a<e.length;a++){if(e[a]instanceof THREE.Scene){U(e[a])}else{r.push(e[a])}}if(r.length>0){D(r)}for(var a=0;a<f.length;++a){C(f[a])}for(var a=0;a<t.animations.length;++a){F(t.animations[a],e[0])}}k(e);Promise.all(o).then(function(){var e=new Blob(s,{type:"application/octet-stream"});var a=Object.keys(u);if(a.length>0)n.extensionsUsed=a;if(n.buffers&&n.buffers.length>0){n.buffers[0].byteLength=e.size;var i=new window.FileReader;if(t.binary===true){var o=12;var l=1179937895;var f=2;var E=8;var T=1313821514;var c=5130562;i.readAsArrayBuffer(e);i.onloadend=function(){var e=y(i.result);var t=new DataView(new ArrayBuffer(E));t.setUint32(0,e.byteLength,true);t.setUint32(4,c,true);var a=y(g(JSON.stringify(n)),32);var s=new DataView(new ArrayBuffer(E));s.setUint32(0,a.byteLength,true);s.setUint32(4,T,true);var u=new ArrayBuffer(o);var p=new DataView(u);p.setUint32(0,l,true);p.setUint32(4,f,true);var h=o+s.byteLength+a.byteLength+t.byteLength+e.byteLength;p.setUint32(8,h,true);var m=new Blob([u,s,a,t,e],{type:"application/octet-stream"});var v=new window.FileReader;v.readAsArrayBuffer(m);v.onloadend=function(){r(v.result)}}}else{i.readAsDataURL(e);i.onloadend=function(){var e=i.result;n.buffers[0].uri=e;r(n)}}}else{r(n)}})}};THREE.GLTFExporter.Utils={insertKeyframe:function(e,r){var t=.001;var a=e.getValueSize();var n=new e.TimeBufferType(e.times.length+1);var i=new e.ValueBufferType(e.values.length+a);var s=e.createInterpolant(new e.ValueBufferType(a));var o;if(e.times.length===0){n[0]=r;for(var l=0;l<a;l++){i[l]=0}o=0}else if(r<e.times[0]){if(Math.abs(e.times[0]-r)<t)return 0;n[0]=r;n.set(e.times,1);i.set(s.evaluate(r),0);i.set(e.values,a);o=0}else if(r>e.times[e.times.length-1]){if(Math.abs(e.times[e.times.length-1]-r)<t){return e.times.length-1}n[n.length-1]=r;n.set(e.times,0);i.set(e.values,0);i.set(s.evaluate(r),e.values.length);o=n.length-1}else{for(var l=0;l<e.times.length;l++){if(Math.abs(e.times[l]-r)<t)return l;if(e.times[l]<r&&e.times[l+1]>r){n.set(e.times.slice(0,l+1),0);n[l+1]=r;n.set(e.times.slice(l+1),l+2);i.set(e.values.slice(0,(l+1)*a),0);i.set(s.evaluate(r),(l+1)*a);i.set(e.values.slice((l+1)*a),(l+2)*a);o=l+1;break}}}e.times=n;e.values=i;return o},mergeMorphTargetTracks:function(e,r){var t=[];var a={};var n=e.tracks;for(var i=0;i<n.length;++i){var s=n[i];var o=THREE.PropertyBinding.parseTrackName(s.name);var l=THREE.PropertyBinding.findNode(r,o.nodeName);if(o.propertyName!=="morphTargetInfluences"||o.propertyIndex===undefined){t.push(s);continue}if(s.createInterpolant!==s.InterpolantFactoryMethodDiscrete&&s.createInterpolant!==s.InterpolantFactoryMethodLinear){if(s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){throw new Error("THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.")}console.warn("THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead.");s=s.clone();s.setInterpolation(THREE.InterpolateLinear)}var f=l.morphTargetInfluences.length;var u=l.morphTargetDictionary[o.propertyIndex];if(u===undefined){throw new Error("THREE.GLTFExporter: Morph target name not found: "+o.propertyIndex)}var E;if(a[l.uuid]===undefined){E=s.clone();var T=new E.ValueBufferType(f*E.times.length);for(var c=0;c<E.times.length;c++){T[c*f+u]=E.values[c]}E.name=".morphTargetInfluences";E.values=T;a[l.uuid]=E;t.push(E);continue}var p=0;var h=0;var m=s.createInterpolant(new s.ValueBufferType(1));E=a[l.uuid];for(var c=0;c<E.times.length;c++){E.values[c*f+u]=m.evaluate(E.times[c])}for(var c=0;c<s.times.length;c++){var g=this.insertKeyframe(E,s.times[c]);E.values[g*f+u]=s.values[c]}}e.tracks=t;return e}};
//# sourceMappingURL=GLTFExporter.min.js.map